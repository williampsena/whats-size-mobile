/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/content/content';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from 'ionic-angular/components/app/app';
import * as import11 from 'ionic-angular/util/keyboard';
import * as import12 from '@angular/core/src/zone/ng_zone';
import * as import13 from 'ionic-angular/navigation/view-controller';
import * as import14 from 'ionic-angular/components/tabs/tabs';
import * as import15 from '@angular/core/src/metadata/view';
import * as import16 from '@angular/core/src/linker/component_factory';
export var Wrapper_Content = (function () {
    function Wrapper_Content(p0, p1, p2, p3, p4, p5, p6, p7) {
        this.changed = false;
        this._fullscreen = import1.UNINITIALIZED;
        this.context = new import0.Content(p0, p1, p2, p3, p4, p5, p6, p7);
    }
    Wrapper_Content.prototype.check_fullscreen = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._fullscreen, currValue))) {
            this.changed = true;
            this.context.fullscreen = currValue;
            this._fullscreen = currValue;
        }
    };
    Wrapper_Content.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_Content;
}());
var renderType_Content_Host = null;
var _View_Content_Host0 = (function (_super) {
    __extends(_View_Content_Host0, _super);
    function _View_Content_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Content_Host0, renderType_Content_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_Content_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-content', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Content0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Content_0_4 = new Wrapper_Content(this.parentInjector.get(import8.Config), new import9.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import10.App), this.parentInjector.get(import11.Keyboard), this.parentInjector.get(import12.NgZone), this.parentInjector.get(import13.ViewController, null), this.parentInjector.get(import14.Tabs, null));
        this._appEl_0.initComponent(this._Content_0_4.context, [], compView_0);
        compView_0.create(this._Content_0_4.context, this.projectableNodes, null);
        this._expr_0 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_Content_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Content) && (0 === requestNodeIndex))) {
            return this._Content_0_4.context;
        }
        return notFoundResult;
    };
    _View_Content_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Content_0_4.detectChangesInternal(this, this._el_0, throwOnChange)) {
            this._appEl_0.componentView.markAsCheckOnce();
        }
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._Content_0_4.context._sbPadding;
        if (import2.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementClass(this._el_0, 'statusbar-padding', currVal_0);
            this._expr_0 = currVal_0;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_Content_Host0.prototype.destroyInternal = function () {
        this._Content_0_4.context.ngOnDestroy();
    };
    return _View_Content_Host0;
}(import3.AppView));
function viewFactory_Content_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Content_Host === null)) {
        (renderType_Content_Host = viewUtils.createRenderComponentType('', 0, import15.ViewEncapsulation.None, [], {}));
    }
    return new _View_Content_Host0(viewUtils, parentInjector, declarationEl);
}
export var ContentNgFactory = new import16.ComponentFactory('ion-content', viewFactory_Content_Host0, import0.Content);
var styles_Content = [];
var renderType_Content = null;
var _View_Content0 = (function (_super) {
    __extends(_View_Content0, _super);
    function _View_Content0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Content0, renderType_Content, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckOnce);
    }
    _View_Content0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'fixed-content');
        this.renderer.projectNodes(this._el_0, import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'scroll-content');
        this.renderer.projectNodes(this._el_1, import2.flattenNestedViewRenderNodes(this.projectableNodes[1]));
        this.renderer.projectNodes(parentRenderNode, import2.flattenNestedViewRenderNodes(this.projectableNodes[2]));
        this.init([], [
            this._el_0,
            this._el_1
        ], [], []);
        return null;
    };
    return _View_Content0;
}(import3.AppView));
export function viewFactory_Content0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Content === null)) {
        (renderType_Content = viewUtils.createRenderComponentType('', 3, import15.ViewEncapsulation.None, styles_Content, {}));
    }
    return new _View_Content0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=content.ngfactory.js.map
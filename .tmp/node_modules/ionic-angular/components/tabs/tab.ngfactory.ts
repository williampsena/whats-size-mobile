/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ionic-angular/components/tabs/tab';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/components/tabs/tabs';
import * as import9 from 'ionic-angular/components/app/app';
import * as import10 from 'ionic-angular/config/config';
import * as import11 from 'ionic-angular/util/keyboard';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/core/src/zone/ng_zone';
import * as import14 from '@angular/core/src/linker/component_factory_resolver';
import * as import15 from 'ionic-angular/gestures/gesture-controller';
import * as import16 from 'ionic-angular/transitions/transition-controller';
import * as import17 from 'ionic-angular/navigation/deep-linker';
import * as import18 from '@angular/core/src/metadata/view';
import * as import19 from '@angular/core/src/linker/component_factory';
import * as import20 from '@angular/core/src/linker/query_list';
export class Wrapper_Tab {
  context:import0.Tab;
  changed:boolean;
  /*private*/ _root:any;
  /*private*/ _rootParams:any;
  /*private*/ _tabUrlPath:any;
  /*private*/ _tabTitle:any;
  /*private*/ _tabIcon:any;
  /*private*/ _tabBadge:any;
  /*private*/ _tabBadgeStyle:any;
  /*private*/ _enabled:any;
  /*private*/ _show:any;
  /*private*/ _swipeBackEnabled:any;
  /*private*/ _tabsHideOnSubPages:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any,p6:any,p7:any,p8:any,p9:any,p10:any,p11:any) {
    this.changed = false;
    this._root = import1.UNINITIALIZED;
    this._rootParams = import1.UNINITIALIZED;
    this._tabUrlPath = import1.UNINITIALIZED;
    this._tabTitle = import1.UNINITIALIZED;
    this._tabIcon = import1.UNINITIALIZED;
    this._tabBadge = import1.UNINITIALIZED;
    this._tabBadgeStyle = import1.UNINITIALIZED;
    this._enabled = import1.UNINITIALIZED;
    this._show = import1.UNINITIALIZED;
    this._swipeBackEnabled = import1.UNINITIALIZED;
    this._tabsHideOnSubPages = import1.UNINITIALIZED;
    this.context = new import0.Tab(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11);
  }
  check_root(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._root,currValue))) {
      this.changed = true;
      this.context.root = currValue;
      this._root = currValue;
    }
  }
  check_rootParams(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._rootParams,currValue))) {
      this.changed = true;
      this.context.rootParams = currValue;
      this._rootParams = currValue;
    }
  }
  check_tabUrlPath(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._tabUrlPath,currValue))) {
      this.changed = true;
      this.context.tabUrlPath = currValue;
      this._tabUrlPath = currValue;
    }
  }
  check_tabTitle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._tabTitle,currValue))) {
      this.changed = true;
      this.context.tabTitle = currValue;
      this._tabTitle = currValue;
    }
  }
  check_tabIcon(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._tabIcon,currValue))) {
      this.changed = true;
      this.context.tabIcon = currValue;
      this._tabIcon = currValue;
    }
  }
  check_tabBadge(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._tabBadge,currValue))) {
      this.changed = true;
      this.context.tabBadge = currValue;
      this._tabBadge = currValue;
    }
  }
  check_tabBadgeStyle(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._tabBadgeStyle,currValue))) {
      this.changed = true;
      this.context.tabBadgeStyle = currValue;
      this._tabBadgeStyle = currValue;
    }
  }
  check_enabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._enabled,currValue))) {
      this.changed = true;
      this.context.enabled = currValue;
      this._enabled = currValue;
    }
  }
  check_show(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._show,currValue))) {
      this.changed = true;
      this.context.show = currValue;
      this._show = currValue;
    }
  }
  check_swipeBackEnabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._swipeBackEnabled,currValue))) {
      this.changed = true;
      this.context.swipeBackEnabled = currValue;
      this._swipeBackEnabled = currValue;
    }
  }
  check_tabsHideOnSubPages(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._tabsHideOnSubPages,currValue))) {
      this.changed = true;
      this.context.tabsHideOnSubPages = currValue;
      this._tabsHideOnSubPages = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}
var renderType_Tab_Host:import4.RenderComponentType = (null as any);
class _View_Tab_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _Tab_0_4:Wrapper_Tab;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Tab_Host0,renderType_Tab_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-tab',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'role','tabpanel');
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Tab0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Tab_0_4 = new Wrapper_Tab(this.parentInjector.get(import8.Tabs),this.parentInjector.get(import9.App),this.parentInjector.get(import10.Config),this.parentInjector.get(import11.Keyboard),new import12.ElementRef(this._el_0),this.parentInjector.get(import13.NgZone),this.renderer,this.parentInjector.get(import14.ComponentFactoryResolver),compView_0.ref,this.parentInjector.get(import15.GestureController),this.parentInjector.get(import16.TransitionController),this.parentInjector.get(import17.DeepLinker,(null as any)));
    this._appEl_0.initComponent(this._Tab_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._Tab_0_4.context,this.projectableNodes,(null as any));
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Tab) && (0 === requestNodeIndex))) { return this._Tab_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Tab_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._Tab_0_4.context._tabId;
    if (import2.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementAttribute(this._el_0,'id',((currVal_0 == (null as any))? (null as any): currVal_0.toString()));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._Tab_0_4.context._btnId;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementAttribute(this._el_0,'aria-labelledby',((currVal_1 == (null as any))? (null as any): currVal_1.toString()));
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Tab_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_Tab_Host === (null as any))) { (renderType_Tab_Host = viewUtils.createRenderComponentType('',0,import18.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Tab_Host0(viewUtils,parentInjector,declarationEl);
}
export const TabNgFactory:import19.ComponentFactory<import0.Tab> = new import19.ComponentFactory<import0.Tab>('ion-tab',viewFactory_Tab_Host0,import0.Tab);
const styles_Tab:any[] = ([] as any[]);
var renderType_Tab:import4.RenderComponentType = (null as any);
class _View_Tab0 extends import3.AppView<import0.Tab> {
  _viewQuery_viewport_0:import20.QueryList<any>;
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _el_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Tab0,renderType_Tab,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_viewport_0 = new import20.QueryList<any>();
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','nav-decor');
    this._viewQuery_viewport_0.reset([this._appEl_0.vcRef]);
    this.context._vp = this._viewQuery_viewport_0.first;
    this.init(([] as any[]),[
      this._el_0,
      this._el_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
}
export function viewFactory_Tab0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.Tab> {
  if ((renderType_Tab === (null as any))) { (renderType_Tab = viewUtils.createRenderComponentType('',0,import18.ViewEncapsulation.None,styles_Tab,{})); }
  return new _View_Tab0(viewUtils,parentInjector,declarationEl);
}
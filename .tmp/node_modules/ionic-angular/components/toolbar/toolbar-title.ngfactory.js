/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/toolbar/toolbar-title';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from 'ionic-angular/components/toolbar/toolbar';
import * as import11 from 'ionic-angular/components/navbar/navbar';
import * as import12 from '@angular/core/src/metadata/view';
import * as import13 from '@angular/core/src/linker/component_factory';
import * as import14 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import15 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import16 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import17 from '@angular/common/src/directives/ng_class';
export var Wrapper_ToolbarTitle = (function () {
    function Wrapper_ToolbarTitle(p0, p1, p2, p3, p4) {
        this.changed = false;
        this.context = new import0.ToolbarTitle(p0, p1, p2, p3, p4);
    }
    Wrapper_ToolbarTitle.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_ToolbarTitle;
}());
var renderType_ToolbarTitle_Host = null;
var _View_ToolbarTitle_Host0 = (function (_super) {
    __extends(_View_ToolbarTitle_Host0, _super);
    function _View_ToolbarTitle_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ToolbarTitle_Host0, renderType_ToolbarTitle_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_ToolbarTitle_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-title', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_ToolbarTitle0(this.viewUtils, this.injector(0), this._appEl_0);
        this._ToolbarTitle_0_4 = new Wrapper_ToolbarTitle(this.parentInjector.get(import8.Config), new import9.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import10.Toolbar, null), this.parentInjector.get(import11.Navbar, null));
        this._appEl_0.initComponent(this._ToolbarTitle_0_4.context, [], compView_0);
        compView_0.create(this._ToolbarTitle_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_ToolbarTitle_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ToolbarTitle) && (0 === requestNodeIndex))) {
            return this._ToolbarTitle_0_4.context;
        }
        return notFoundResult;
    };
    _View_ToolbarTitle_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._ToolbarTitle_0_4.detectChangesInternal(this, this._el_0, throwOnChange)) {
            this._appEl_0.componentView.markAsCheckOnce();
        }
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ToolbarTitle_Host0;
}(import1.AppView));
function viewFactory_ToolbarTitle_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ToolbarTitle_Host === null)) {
        (renderType_ToolbarTitle_Host = viewUtils.createRenderComponentType('', 0, import12.ViewEncapsulation.None, [], {}));
    }
    return new _View_ToolbarTitle_Host0(viewUtils, parentInjector, declarationEl);
}
export var ToolbarTitleNgFactory = new import13.ComponentFactory('ion-title', viewFactory_ToolbarTitle_Host0, import0.ToolbarTitle);
var styles_ToolbarTitle = [];
var renderType_ToolbarTitle = null;
var _View_ToolbarTitle0 = (function (_super) {
    __extends(_View_ToolbarTitle0, _super);
    function _View_ToolbarTitle0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_ToolbarTitle0, renderType_ToolbarTitle, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckOnce);
    }
    _View_ToolbarTitle0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'toolbar-title');
        this._NgClass_0_3 = new import14.Wrapper_NgClass(this.parentInjector.get(import15.IterableDiffers), this.parentInjector.get(import16.KeyValueDiffers), new import9.ElementRef(this._el_0), this.renderer);
        this.renderer.projectNodes(this._el_0, import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
        this.init([], [this._el_0], [], []);
        return null;
    };
    _View_ToolbarTitle0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import17.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        return notFoundResult;
    };
    _View_ToolbarTitle0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'toolbar-title';
        this._NgClass_0_3.check_klass(currVal_0, throwOnChange, false);
        var currVal_1 = ('toolbar-title-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_1, throwOnChange, false);
        this._NgClass_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_ToolbarTitle0;
}(import1.AppView));
export function viewFactory_ToolbarTitle0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_ToolbarTitle === null)) {
        (renderType_ToolbarTitle = viewUtils.createRenderComponentType('', 1, import12.ViewEncapsulation.None, styles_ToolbarTitle, {}));
    }
    return new _View_ToolbarTitle0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=toolbar-title.ngfactory.js.map
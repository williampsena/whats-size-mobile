/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/input/input';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from 'ionic-angular/util/form';
import * as import10 from 'ionic-angular/components/item/item';
import * as import11 from 'ionic-angular/components/app/app';
import * as import12 from 'ionic-angular/platform/platform';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from 'ionic-angular/components/content/content';
import * as import15 from 'ionic-angular/navigation/nav-controller';
import * as import16 from '@angular/forms/src/directives/ng_control';
import * as import17 from '@angular/core/src/metadata/view';
import * as import18 from '@angular/core/src/linker/component_factory';
import * as import19 from '@angular/core/src/linker/query_list';
import * as import20 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import21 from '../../../@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import22 from '../../../@angular/forms/src/directives/ng_model.ngfactory';
import * as import23 from '../../../@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import24 from './native-input.ngfactory';
import * as import25 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import26 from '../button/button.ngfactory';
import * as import27 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import28 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import29 from '@angular/core/src/linker/template_ref';
import * as import30 from '@angular/common/src/directives/ng_class';
import * as import31 from '@angular/forms/src/directives/default_value_accessor';
import * as import32 from '@angular/forms/src/directives/control_value_accessor';
import * as import33 from '@angular/forms/src/directives/ng_model';
import * as import34 from '@angular/forms/src/directives/ng_control_status';
import * as import35 from 'ionic-angular/components/input/native-input';
import * as import36 from '@angular/common/src/directives/ng_if';
import * as import37 from 'ionic-angular/components/button/button';
export var Wrapper_TextInput = (function () {
    function Wrapper_TextInput(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
        this.changed = false;
        this._placeholder = import1.UNINITIALIZED;
        this._clearInput = import1.UNINITIALIZED;
        this._value = import1.UNINITIALIZED;
        this._type = import1.UNINITIALIZED;
        this._disabled = import1.UNINITIALIZED;
        this._mode = import1.UNINITIALIZED;
        this.context = new import0.TextInput(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
    }
    Wrapper_TextInput.prototype.check_placeholder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._placeholder, currValue))) {
            this.changed = true;
            this.context.placeholder = currValue;
            this._placeholder = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_clearInput = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._clearInput, currValue))) {
            this.changed = true;
            this.context.clearInput = currValue;
            this._clearInput = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._value, currValue))) {
            this.changed = true;
            this.context.value = currValue;
            this._value = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_type = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._type, currValue))) {
            this.changed = true;
            this.context.type = currValue;
            this._type = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._disabled, currValue))) {
            this.changed = true;
            this.context.disabled = currValue;
            this._disabled = currValue;
        }
    };
    Wrapper_TextInput.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._mode, currValue))) {
            this.changed = true;
            this.context.mode = currValue;
            this._mode = currValue;
        }
    };
    Wrapper_TextInput.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_TextInput;
}());
export var Wrapper_TextArea = (function () {
    function Wrapper_TextArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9) {
        this.changed = false;
        this._placeholder = import1.UNINITIALIZED;
        this._value = import1.UNINITIALIZED;
        this._type = import1.UNINITIALIZED;
        this._disabled = import1.UNINITIALIZED;
        this._mode = import1.UNINITIALIZED;
        this.context = new import0.TextArea(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);
    }
    Wrapper_TextArea.prototype.check_placeholder = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._placeholder, currValue))) {
            this.changed = true;
            this.context.placeholder = currValue;
            this._placeholder = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_value = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._value, currValue))) {
            this.changed = true;
            this.context.value = currValue;
            this._value = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_type = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._type, currValue))) {
            this.changed = true;
            this.context.type = currValue;
            this._type = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_disabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._disabled, currValue))) {
            this.changed = true;
            this.context.disabled = currValue;
            this._disabled = currValue;
        }
    };
    Wrapper_TextArea.prototype.check_mode = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._mode, currValue))) {
            this.changed = true;
            this.context.mode = currValue;
            this._mode = currValue;
        }
    };
    Wrapper_TextArea.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_TextArea;
}());
var renderType_TextInput_Host = null;
var _View_TextInput_Host0 = (function (_super) {
    __extends(_View_TextInput_Host0, _super);
    function _View_TextInput_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextInput_Host0, renderType_TextInput_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextInput_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-input', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_TextInput0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TextInput_0_4 = new Wrapper_TextInput(this.parentInjector.get(import8.Config), this.parentInjector.get(import9.Form), this.parentInjector.get(import10.Item, null), this.parentInjector.get(import11.App), this.parentInjector.get(import12.Platform), new import13.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import14.Content, null), this.parentInjector.get(import15.NavController, null), this.parentInjector.get(import16.NgControl, null));
        this._appEl_0.initComponent(this._TextInput_0_4.context, [], compView_0);
        compView_0.create(this._TextInput_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_TextInput_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.TextInput) && (0 === requestNodeIndex))) {
            return this._TextInput_0_4.context;
        }
        return notFoundResult;
    };
    _View_TextInput_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TextInput_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            this._TextInput_0_4.context.ngAfterContentChecked();
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_TextInput_Host0.prototype.destroyInternal = function () {
        this._TextInput_0_4.context.ngOnDestroy();
    };
    return _View_TextInput_Host0;
}(import3.AppView));
function viewFactory_TextInput_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TextInput_Host === null)) {
        (renderType_TextInput_Host = viewUtils.createRenderComponentType('', 0, import17.ViewEncapsulation.None, [], {}));
    }
    return new _View_TextInput_Host0(viewUtils, parentInjector, declarationEl);
}
export var TextInputNgFactory = new import18.ComponentFactory('ion-input', viewFactory_TextInput_Host0, import0.TextInput);
var styles_TextInput = [];
var renderType_TextInput = null;
var _View_TextInput0 = (function (_super) {
    __extends(_View_TextInput0, _super);
    function _View_TextInput0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextInput0, renderType_TextInput, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextInput0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_NativeInput_0 = new import19.QueryList();
        this._viewQuery_NextInput_1 = new import19.QueryList();
        this._el_0 = this.renderer.createElement(parentRenderNode, 'input', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'text-input');
        this._NgClass_0_3 = new import20.Wrapper_NgClass(this.parentInjector.get(import27.IterableDiffers), this.parentInjector.get(import28.KeyValueDiffers), new import13.ElementRef(this._el_0), this.renderer);
        this._DefaultValueAccessor_0_4 = new import21.Wrapper_DefaultValueAccessor(this.renderer, new import13.ElementRef(this._el_0));
        this._NG_VALUE_ACCESSOR_0_5 = [this._DefaultValueAccessor_0_4.context];
        this._NgModel_0_6 = new import22.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_0_5);
        this._NgControl_0_7 = this._NgModel_0_6.context;
        this._NgControlStatus_0_8 = new import23.Wrapper_NgControlStatus(this._NgControl_0_7);
        this._NativeInput_0_9 = new import24.Wrapper_NativeInput(new import13.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import8.Config), this._NgControl_0_7);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_1 = new import5.AppElement(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import29.TemplateRef_(this._appEl_1, viewFactory_TextInput1);
        this._NgIf_1_6 = new import25.Wrapper_NgIf(this._appEl_1.vcRef, this._TemplateRef_1_5);
        this._el_2 = this.renderer.createElement(parentRenderNode, 'button', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'text-input-clear-icon');
        this.renderer.setElementAttribute(this._el_2, 'clear', '');
        this.renderer.setElementAttribute(this._el_2, 'ion-button', '');
        this.renderer.setElementAttribute(this._el_2, 'type', 'button');
        this._appEl_2 = new import5.AppElement(2, null, this, this._el_2);
        var compView_2 = import26.viewFactory_Button0(this.viewUtils, this.injector(2), this._appEl_2);
        this._Button_2_4 = new import26.Wrapper_Button(null, '', this.parentInjector.get(import8.Config), new import13.ElementRef(this._el_2), this.renderer);
        this._appEl_2.initComponent(this._Button_2_4.context, [], compView_2);
        compView_2.create(this._Button_2_4.context, [[]], null);
        this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_3 = new import5.AppElement(3, null, this, this._anchor_3);
        this._TemplateRef_3_5 = new import29.TemplateRef_(this._appEl_3, viewFactory_TextInput2);
        this._NgIf_3_6 = new import25.Wrapper_NgIf(this._appEl_3.vcRef, this._TemplateRef_3_5);
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_0_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_0, 'blur', this.eventHandler(this._handle_blur_0_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_0, 'focus', this.eventHandler(this._handle_focus_0_2.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_0, 'input', this.eventHandler(this._handle_input_0_3.bind(this)));
        var subscription_0 = this._NgModel_0_6.context.update.subscribe(this.eventHandler(this._handle_ngModelChange_0_0.bind(this)));
        this._expr_13 = import1.UNINITIALIZED;
        this._expr_14 = import1.UNINITIALIZED;
        this._expr_15 = import1.UNINITIALIZED;
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
        this._expr_18 = import1.UNINITIALIZED;
        this._expr_22 = import1.UNINITIALIZED;
        var disposable_4 = this.renderer.listen(this._el_2, 'click', this.eventHandler(this._handle_click_2_0.bind(this)));
        var disposable_5 = this.renderer.listen(this._el_2, 'mousedown', this.eventHandler(this._handle_mousedown_2_1.bind(this)));
        this._viewQuery_NativeInput_0.reset([this._NativeInput_0_9.context]);
        this.context._nativeInput = this._viewQuery_NativeInput_0.first;
        this.init([], [
            this._el_0,
            this._anchor_1,
            this._el_2,
            this._anchor_3
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3,
            disposable_4,
            disposable_5
        ], [subscription_0]);
        return null;
    };
    _View_TextInput0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import30.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        if (((token === import31.DefaultValueAccessor) && (0 === requestNodeIndex))) {
            return this._DefaultValueAccessor_0_4.context;
        }
        if (((token === import32.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_5;
        }
        if (((token === import33.NgModel) && (0 === requestNodeIndex))) {
            return this._NgModel_0_6.context;
        }
        if (((token === import16.NgControl) && (0 === requestNodeIndex))) {
            return this._NgControl_0_7;
        }
        if (((token === import34.NgControlStatus) && (0 === requestNodeIndex))) {
            return this._NgControlStatus_0_8.context;
        }
        if (((token === import35.NativeInput) && (0 === requestNodeIndex))) {
            return this._NativeInput_0_9.context;
        }
        if (((token === import29.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import36.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6.context;
        }
        if (((token === import37.Button) && (2 === requestNodeIndex))) {
            return this._Button_2_4.context;
        }
        if (((token === import29.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import36.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        return notFoundResult;
    };
    _View_TextInput0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_10 = 'text-input';
        this._NgClass_0_3.check_klass(currVal_10, throwOnChange, false);
        var currVal_11 = ('text-input-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_11, throwOnChange, false);
        this._NgClass_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this._DefaultValueAccessor_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_12 = this.context._value;
        this._NgModel_0_6.check_model(currVal_12, throwOnChange, false);
        this._NgModel_0_6.detectChangesInternal(this, this._el_0, throwOnChange);
        this._NgControlStatus_0_8.detectChangesInternal(this, this._el_0, throwOnChange);
        this._NativeInput_0_9.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_19 = this.context._useAssist;
        this._NgIf_1_6.check_ngIf(currVal_19, throwOnChange, false);
        this._NgIf_1_6.detectChangesInternal(this, this._anchor_1, throwOnChange);
        var currVal_23 = '';
        this._Button_2_4.check_clear(currVal_23, throwOnChange, false);
        if (this._Button_2_4.detectChangesInternal(this, this._el_2, throwOnChange)) {
            this._appEl_2.componentView.markAsCheckOnce();
        }
        var currVal_24 = this.context._useAssist;
        this._NgIf_3_6.check_ngIf(currVal_24, throwOnChange, false);
        this._NgIf_3_6.detectChangesInternal(this, this._anchor_3, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_2_4.context.ngAfterContentInit();
            }
        }
        var currVal_8 = this.context.type;
        if (import2.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementProperty(this._el_0, 'type', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_9 = this.context.placeholder;
        if (import2.checkBinding(throwOnChange, this._expr_9, currVal_9)) {
            this.renderer.setElementProperty(this._el_0, 'placeholder', currVal_9);
            this._expr_9 = currVal_9;
        }
        var currVal_13 = this._NgControlStatus_0_8.context.ngClassUntouched;
        if (import2.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setElementClass(this._el_0, 'ng-untouched', currVal_13);
            this._expr_13 = currVal_13;
        }
        var currVal_14 = this._NgControlStatus_0_8.context.ngClassTouched;
        if (import2.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementClass(this._el_0, 'ng-touched', currVal_14);
            this._expr_14 = currVal_14;
        }
        var currVal_15 = this._NgControlStatus_0_8.context.ngClassPristine;
        if (import2.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementClass(this._el_0, 'ng-pristine', currVal_15);
            this._expr_15 = currVal_15;
        }
        var currVal_16 = this._NgControlStatus_0_8.context.ngClassDirty;
        if (import2.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementClass(this._el_0, 'ng-dirty', currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this._NgControlStatus_0_8.context.ngClassValid;
        if (import2.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementClass(this._el_0, 'ng-valid', currVal_17);
            this._expr_17 = currVal_17;
        }
        var currVal_18 = this._NgControlStatus_0_8.context.ngClassInvalid;
        if (import2.checkBinding(throwOnChange, this._expr_18, currVal_18)) {
            this.renderer.setElementClass(this._el_0, 'ng-invalid', currVal_18);
            this._expr_18 = currVal_18;
        }
        var currVal_22 = !this.context.clearInput;
        if (import2.checkBinding(throwOnChange, this._expr_22, currVal_22)) {
            this.renderer.setElementProperty(this._el_2, 'hidden', currVal_22);
            this._expr_22 = currVal_22;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_NextInput_1.dirty) {
                this._viewQuery_NextInput_1.reset([this._appEl_1.mapNestedViews(_View_TextInput1, function (nestedView) {
                        return [nestedView._NextInput_0_3.context];
                    })]);
                this.context._nextInput = this._viewQuery_NextInput_1.first;
            }
        }
    };
    _View_TextInput0.prototype.destroyInternal = function () {
        this._NgModel_0_6.context.ngOnDestroy();
        this._NativeInput_0_9.context.ngOnDestroy();
    };
    _View_TextInput0.prototype._handle_ngModelChange_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context._value = $event) !== false);
        return (true && pd_0);
    };
    _View_TextInput0.prototype._handle_blur_0_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.inputBlurred($event) !== false);
        var pd_1 = (this._DefaultValueAccessor_0_4.context.onTouched() !== false);
        var pd_2 = (this._NativeInput_0_9.context._blur() !== false);
        return (((true && pd_0) && pd_1) && pd_2);
    };
    _View_TextInput0.prototype._handle_focus_0_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.inputFocused($event) !== false);
        var pd_1 = (this._NativeInput_0_9.context._focus() !== false);
        return ((true && pd_0) && pd_1);
    };
    _View_TextInput0.prototype._handle_input_0_3 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_0_4.context.onChange($event.target.value) !== false);
        var pd_1 = (this._NativeInput_0_9.context._change($event) !== false);
        return ((true && pd_0) && pd_1);
    };
    _View_TextInput0.prototype._handle_click_2_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.clearTextInput() !== false);
        return (true && pd_0);
    };
    _View_TextInput0.prototype._handle_mousedown_2_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.clearTextInput() !== false);
        return (true && pd_0);
    };
    return _View_TextInput0;
}(import3.AppView));
export function viewFactory_TextInput0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TextInput === null)) {
        (renderType_TextInput = viewUtils.createRenderComponentType('', 0, import17.ViewEncapsulation.None, styles_TextInput, {}));
    }
    return new _View_TextInput0(viewUtils, parentInjector, declarationEl);
}
var _View_TextInput1 = (function (_super) {
    __extends(_View_TextInput1, _super);
    function _View_TextInput1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextInput1, renderType_TextInput, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextInput1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'input', null);
        this.renderer.setElementAttribute(this._el_0, 'aria-hidden', 'true');
        this.renderer.setElementAttribute(this._el_0, 'next-input', '');
        this._NextInput_0_3 = new import24.Wrapper_NextInput();
        this._expr_1 = import1.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'focus', this.eventHandler(this._handle_focus_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return null;
    };
    _View_TextInput1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import35.NextInput) && (0 === requestNodeIndex))) {
            return this._NextInput_0_3.context;
        }
        return notFoundResult;
    };
    _View_TextInput1.prototype.detectChangesInternal = function (throwOnChange) {
        this._NextInput_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this.parent.context.type;
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'type', currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_TextInput1.prototype.dirtyParentQueriesInternal = function () {
        this.parent._viewQuery_NextInput_1.setDirty();
    };
    _View_TextInput1.prototype._handle_focus_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._NextInput_0_3.context.receivedFocus() !== false);
        return (true && pd_0);
    };
    return _View_TextInput1;
}(import3.AppView));
function viewFactory_TextInput1(viewUtils, parentInjector, declarationEl) {
    return new _View_TextInput1(viewUtils, parentInjector, declarationEl);
}
var _View_TextInput2 = (function (_super) {
    __extends(_View_TextInput2, _super);
    function _View_TextInput2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextInput2, renderType_TextInput, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextInput2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'input-cover');
        this.renderer.setElementAttribute(this._el_0, 'tappable', '');
        var disposable_0 = this.renderer.listen(this._el_0, 'touchstart', this.eventHandler(this._handle_touchstart_0_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_0, 'touchend', this.eventHandler(this._handle_touchend_0_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_0, 'mousedown', this.eventHandler(this._handle_mousedown_0_2.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_0, 'mouseup', this.eventHandler(this._handle_mouseup_0_3.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3
        ], []);
        return null;
    };
    _View_TextInput2.prototype._handle_touchstart_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerStart($event) !== false);
        return (true && pd_0);
    };
    _View_TextInput2.prototype._handle_touchend_0_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerEnd($event) !== false);
        return (true && pd_0);
    };
    _View_TextInput2.prototype._handle_mousedown_0_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerStart($event) !== false);
        return (true && pd_0);
    };
    _View_TextInput2.prototype._handle_mouseup_0_3 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerEnd($event) !== false);
        return (true && pd_0);
    };
    return _View_TextInput2;
}(import3.AppView));
function viewFactory_TextInput2(viewUtils, parentInjector, declarationEl) {
    return new _View_TextInput2(viewUtils, parentInjector, declarationEl);
}
var renderType_TextArea_Host = null;
var _View_TextArea_Host0 = (function (_super) {
    __extends(_View_TextArea_Host0, _super);
    function _View_TextArea_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextArea_Host0, renderType_TextArea_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextArea_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-textarea', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_TextArea0(this.viewUtils, this.injector(0), this._appEl_0);
        this._TextArea_0_4 = new Wrapper_TextArea(this.parentInjector.get(import8.Config), this.parentInjector.get(import9.Form), this.parentInjector.get(import10.Item, null), this.parentInjector.get(import11.App), this.parentInjector.get(import12.Platform), new import13.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import14.Content, null), this.parentInjector.get(import15.NavController, null), this.parentInjector.get(import16.NgControl, null));
        this._appEl_0.initComponent(this._TextArea_0_4.context, [], compView_0);
        compView_0.create(this._TextArea_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_TextArea_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.TextArea) && (0 === requestNodeIndex))) {
            return this._TextArea_0_4.context;
        }
        return notFoundResult;
    };
    _View_TextArea_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._TextArea_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            this._TextArea_0_4.context.ngAfterContentChecked();
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_TextArea_Host0.prototype.destroyInternal = function () {
        this._TextArea_0_4.context.ngOnDestroy();
    };
    return _View_TextArea_Host0;
}(import3.AppView));
function viewFactory_TextArea_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TextArea_Host === null)) {
        (renderType_TextArea_Host = viewUtils.createRenderComponentType('', 0, import17.ViewEncapsulation.None, [], {}));
    }
    return new _View_TextArea_Host0(viewUtils, parentInjector, declarationEl);
}
export var TextAreaNgFactory = new import18.ComponentFactory('ion-textarea', viewFactory_TextArea_Host0, import0.TextArea);
var styles_TextArea = [];
var renderType_TextArea = null;
var _View_TextArea0 = (function (_super) {
    __extends(_View_TextArea0, _super);
    function _View_TextArea0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextArea0, renderType_TextArea, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextArea0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_NativeInput_0 = new import19.QueryList();
        this._viewQuery_NextInput_1 = new import19.QueryList();
        this._el_0 = this.renderer.createElement(parentRenderNode, 'textarea', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'text-input');
        this._NgClass_0_3 = new import20.Wrapper_NgClass(this.parentInjector.get(import27.IterableDiffers), this.parentInjector.get(import28.KeyValueDiffers), new import13.ElementRef(this._el_0), this.renderer);
        this._DefaultValueAccessor_0_4 = new import21.Wrapper_DefaultValueAccessor(this.renderer, new import13.ElementRef(this._el_0));
        this._NG_VALUE_ACCESSOR_0_5 = [this._DefaultValueAccessor_0_4.context];
        this._NgModel_0_6 = new import22.Wrapper_NgModel(null, null, null, this._NG_VALUE_ACCESSOR_0_5);
        this._NgControl_0_7 = this._NgModel_0_6.context;
        this._NgControlStatus_0_8 = new import23.Wrapper_NgControlStatus(this._NgControl_0_7);
        this._NativeInput_0_9 = new import24.Wrapper_NativeInput(new import13.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import8.Config), this._NgControl_0_7);
        this._anchor_1 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_1 = new import5.AppElement(1, null, this, this._anchor_1);
        this._TemplateRef_1_5 = new import29.TemplateRef_(this._appEl_1, viewFactory_TextArea1);
        this._NgIf_1_6 = new import25.Wrapper_NgIf(this._appEl_1.vcRef, this._TemplateRef_1_5);
        this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_2 = new import5.AppElement(2, null, this, this._anchor_2);
        this._TemplateRef_2_5 = new import29.TemplateRef_(this._appEl_2, viewFactory_TextArea2);
        this._NgIf_2_6 = new import25.Wrapper_NgIf(this._appEl_2.vcRef, this._TemplateRef_2_5);
        this._expr_8 = import1.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'ngModelChange', this.eventHandler(this._handle_ngModelChange_0_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_0, 'blur', this.eventHandler(this._handle_blur_0_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_0, 'focus', this.eventHandler(this._handle_focus_0_2.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_0, 'input', this.eventHandler(this._handle_input_0_3.bind(this)));
        var subscription_0 = this._NgModel_0_6.context.update.subscribe(this.eventHandler(this._handle_ngModelChange_0_0.bind(this)));
        this._expr_12 = import1.UNINITIALIZED;
        this._expr_13 = import1.UNINITIALIZED;
        this._expr_14 = import1.UNINITIALIZED;
        this._expr_15 = import1.UNINITIALIZED;
        this._expr_16 = import1.UNINITIALIZED;
        this._expr_17 = import1.UNINITIALIZED;
        this._viewQuery_NativeInput_0.reset([this._NativeInput_0_9.context]);
        this.context._nativeInput = this._viewQuery_NativeInput_0.first;
        this.init([], [
            this._el_0,
            this._anchor_1,
            this._anchor_2
        ], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3
        ], [subscription_0]);
        return null;
    };
    _View_TextArea0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import30.NgClass) && (0 === requestNodeIndex))) {
            return this._NgClass_0_3.context;
        }
        if (((token === import31.DefaultValueAccessor) && (0 === requestNodeIndex))) {
            return this._DefaultValueAccessor_0_4.context;
        }
        if (((token === import32.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) {
            return this._NG_VALUE_ACCESSOR_0_5;
        }
        if (((token === import33.NgModel) && (0 === requestNodeIndex))) {
            return this._NgModel_0_6.context;
        }
        if (((token === import16.NgControl) && (0 === requestNodeIndex))) {
            return this._NgControl_0_7;
        }
        if (((token === import34.NgControlStatus) && (0 === requestNodeIndex))) {
            return this._NgControlStatus_0_8.context;
        }
        if (((token === import35.NativeInput) && (0 === requestNodeIndex))) {
            return this._NativeInput_0_9.context;
        }
        if (((token === import29.TemplateRef) && (1 === requestNodeIndex))) {
            return this._TemplateRef_1_5;
        }
        if (((token === import36.NgIf) && (1 === requestNodeIndex))) {
            return this._NgIf_1_6.context;
        }
        if (((token === import29.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import36.NgIf) && (2 === requestNodeIndex))) {
            return this._NgIf_2_6.context;
        }
        return notFoundResult;
    };
    _View_TextArea0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_9 = 'text-input';
        this._NgClass_0_3.check_klass(currVal_9, throwOnChange, false);
        var currVal_10 = ('text-input-' + this.context._mode);
        this._NgClass_0_3.check_ngClass(currVal_10, throwOnChange, false);
        this._NgClass_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this._DefaultValueAccessor_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_11 = this.context._value;
        this._NgModel_0_6.check_model(currVal_11, throwOnChange, false);
        this._NgModel_0_6.detectChangesInternal(this, this._el_0, throwOnChange);
        this._NgControlStatus_0_8.detectChangesInternal(this, this._el_0, throwOnChange);
        this._NativeInput_0_9.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_18 = this.context._useAssist;
        this._NgIf_1_6.check_ngIf(currVal_18, throwOnChange, false);
        this._NgIf_1_6.detectChangesInternal(this, this._anchor_1, throwOnChange);
        var currVal_19 = this.context._useAssist;
        this._NgIf_2_6.check_ngIf(currVal_19, throwOnChange, false);
        this._NgIf_2_6.detectChangesInternal(this, this._anchor_2, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_8 = this.context.placeholder;
        if (import2.checkBinding(throwOnChange, this._expr_8, currVal_8)) {
            this.renderer.setElementProperty(this._el_0, 'placeholder', currVal_8);
            this._expr_8 = currVal_8;
        }
        var currVal_12 = this._NgControlStatus_0_8.context.ngClassUntouched;
        if (import2.checkBinding(throwOnChange, this._expr_12, currVal_12)) {
            this.renderer.setElementClass(this._el_0, 'ng-untouched', currVal_12);
            this._expr_12 = currVal_12;
        }
        var currVal_13 = this._NgControlStatus_0_8.context.ngClassTouched;
        if (import2.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setElementClass(this._el_0, 'ng-touched', currVal_13);
            this._expr_13 = currVal_13;
        }
        var currVal_14 = this._NgControlStatus_0_8.context.ngClassPristine;
        if (import2.checkBinding(throwOnChange, this._expr_14, currVal_14)) {
            this.renderer.setElementClass(this._el_0, 'ng-pristine', currVal_14);
            this._expr_14 = currVal_14;
        }
        var currVal_15 = this._NgControlStatus_0_8.context.ngClassDirty;
        if (import2.checkBinding(throwOnChange, this._expr_15, currVal_15)) {
            this.renderer.setElementClass(this._el_0, 'ng-dirty', currVal_15);
            this._expr_15 = currVal_15;
        }
        var currVal_16 = this._NgControlStatus_0_8.context.ngClassValid;
        if (import2.checkBinding(throwOnChange, this._expr_16, currVal_16)) {
            this.renderer.setElementClass(this._el_0, 'ng-valid', currVal_16);
            this._expr_16 = currVal_16;
        }
        var currVal_17 = this._NgControlStatus_0_8.context.ngClassInvalid;
        if (import2.checkBinding(throwOnChange, this._expr_17, currVal_17)) {
            this.renderer.setElementClass(this._el_0, 'ng-invalid', currVal_17);
            this._expr_17 = currVal_17;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_NextInput_1.dirty) {
                this._viewQuery_NextInput_1.reset([this._appEl_1.mapNestedViews(_View_TextArea1, function (nestedView) {
                        return [nestedView._NextInput_0_3.context];
                    })]);
                this.context._nextInput = this._viewQuery_NextInput_1.first;
            }
        }
    };
    _View_TextArea0.prototype.destroyInternal = function () {
        this._NgModel_0_6.context.ngOnDestroy();
        this._NativeInput_0_9.context.ngOnDestroy();
    };
    _View_TextArea0.prototype._handle_ngModelChange_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = ((this.context._value = $event) !== false);
        return (true && pd_0);
    };
    _View_TextArea0.prototype._handle_blur_0_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.inputBlurred($event) !== false);
        var pd_1 = (this._DefaultValueAccessor_0_4.context.onTouched() !== false);
        var pd_2 = (this._NativeInput_0_9.context._blur() !== false);
        return (((true && pd_0) && pd_1) && pd_2);
    };
    _View_TextArea0.prototype._handle_focus_0_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.inputFocused($event) !== false);
        var pd_1 = (this._NativeInput_0_9.context._focus() !== false);
        return ((true && pd_0) && pd_1);
    };
    _View_TextArea0.prototype._handle_input_0_3 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._DefaultValueAccessor_0_4.context.onChange($event.target.value) !== false);
        var pd_1 = (this._NativeInput_0_9.context._change($event) !== false);
        return ((true && pd_0) && pd_1);
    };
    return _View_TextArea0;
}(import3.AppView));
export function viewFactory_TextArea0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_TextArea === null)) {
        (renderType_TextArea = viewUtils.createRenderComponentType('', 0, import17.ViewEncapsulation.None, styles_TextArea, {}));
    }
    return new _View_TextArea0(viewUtils, parentInjector, declarationEl);
}
var _View_TextArea1 = (function (_super) {
    __extends(_View_TextArea1, _super);
    function _View_TextArea1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextArea1, renderType_TextArea, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextArea1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'input', null);
        this.renderer.setElementAttribute(this._el_0, 'aria-hidden', 'true');
        this.renderer.setElementAttribute(this._el_0, 'next-input', '');
        this.renderer.setElementAttribute(this._el_0, 'type', 'text');
        this._NextInput_0_3 = new import24.Wrapper_NextInput();
        var disposable_0 = this.renderer.listen(this._el_0, 'focus', this.eventHandler(this._handle_focus_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return null;
    };
    _View_TextArea1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import35.NextInput) && (0 === requestNodeIndex))) {
            return this._NextInput_0_3.context;
        }
        return notFoundResult;
    };
    _View_TextArea1.prototype.detectChangesInternal = function (throwOnChange) {
        this._NextInput_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_TextArea1.prototype.dirtyParentQueriesInternal = function () {
        this.parent._viewQuery_NextInput_1.setDirty();
    };
    _View_TextArea1.prototype._handle_focus_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this._NextInput_0_3.context.receivedFocus() !== false);
        return (true && pd_0);
    };
    return _View_TextArea1;
}(import3.AppView));
function viewFactory_TextArea1(viewUtils, parentInjector, declarationEl) {
    return new _View_TextArea1(viewUtils, parentInjector, declarationEl);
}
var _View_TextArea2 = (function (_super) {
    __extends(_View_TextArea2, _super);
    function _View_TextArea2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_TextArea2, renderType_TextArea, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_TextArea2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'input-cover');
        this.renderer.setElementAttribute(this._el_0, 'tappable', '');
        var disposable_0 = this.renderer.listen(this._el_0, 'touchstart', this.eventHandler(this._handle_touchstart_0_0.bind(this)));
        var disposable_1 = this.renderer.listen(this._el_0, 'touchend', this.eventHandler(this._handle_touchend_0_1.bind(this)));
        var disposable_2 = this.renderer.listen(this._el_0, 'mousedown', this.eventHandler(this._handle_mousedown_0_2.bind(this)));
        var disposable_3 = this.renderer.listen(this._el_0, 'mouseup', this.eventHandler(this._handle_mouseup_0_3.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [
            disposable_0,
            disposable_1,
            disposable_2,
            disposable_3
        ], []);
        return null;
    };
    _View_TextArea2.prototype._handle_touchstart_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerStart($event) !== false);
        return (true && pd_0);
    };
    _View_TextArea2.prototype._handle_touchend_0_1 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerEnd($event) !== false);
        return (true && pd_0);
    };
    _View_TextArea2.prototype._handle_mousedown_0_2 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerStart($event) !== false);
        return (true && pd_0);
    };
    _View_TextArea2.prototype._handle_mouseup_0_3 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.pointerEnd($event) !== false);
        return (true && pd_0);
    };
    return _View_TextArea2;
}(import3.AppView));
function viewFactory_TextArea2(viewUtils, parentInjector, declarationEl) {
    return new _View_TextArea2(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=input.ngfactory.js.map
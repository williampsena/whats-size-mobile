/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/picker/picker-component';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/config/config';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import11 from 'ionic-angular/util/haptic';
import * as import12 from '@angular/core/src/security';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import17 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/common/src/directives/ng_if';
import * as import21 from '@angular/common/src/directives/ng_for';
import * as import22 from '../button/button.ngfactory';
import * as import23 from 'ionic-angular/components/button/button';
import * as import24 from 'ionic-angular/navigation/view-controller';
import * as import25 from 'ionic-angular/navigation/nav-params';
import * as import26 from '../backdrop/backdrop.ngfactory';
import * as import27 from 'ionic-angular/gestures/gesture-controller';
import * as import28 from 'ionic-angular/components/backdrop/backdrop';
import * as import29 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import30 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import31 from '@angular/common/src/directives/ng_class';
export var Wrapper_PickerColumnCmp = (function () {
    function Wrapper_PickerColumnCmp(p0, p1, p2, p3) {
        this.changed = false;
        this._col = import1.UNINITIALIZED;
        this.context = new import0.PickerColumnCmp(p0, p1, p2, p3);
    }
    Wrapper_PickerColumnCmp.prototype.check_col = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._col, currValue))) {
            this.changed = true;
            this.context.col = currValue;
            this._col = currValue;
        }
    };
    Wrapper_PickerColumnCmp.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_PickerColumnCmp;
}());
export var Wrapper_PickerCmp = (function () {
    function Wrapper_PickerCmp(p0, p1, p2, p3, p4) {
        this.changed = false;
        this.context = new import0.PickerCmp(p0, p1, p2, p3, p4);
    }
    Wrapper_PickerCmp.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_PickerCmp;
}());
var renderType_PickerColumnCmp_Host = null;
var _View_PickerColumnCmp_Host0 = (function (_super) {
    __extends(_View_PickerColumnCmp_Host0, _super);
    function _View_PickerColumnCmp_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerColumnCmp_Host0, renderType_PickerColumnCmp_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerColumnCmp_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('div', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'picker-col');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_PickerColumnCmp0(this.viewUtils, this.injector(0), this._appEl_0);
        this._PickerColumnCmp_0_4 = new Wrapper_PickerColumnCmp(this.parentInjector.get(import8.Config), new import9.ElementRef(this._el_0), this.parentInjector.get(import10.DomSanitizer), this.parentInjector.get(import11.Haptic));
        this._appEl_0.initComponent(this._PickerColumnCmp_0_4.context, [], compView_0);
        compView_0.create(this._PickerColumnCmp_0_4.context, this.projectableNodes, null);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_PickerColumnCmp_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.PickerColumnCmp) && (0 === requestNodeIndex))) {
            return this._PickerColumnCmp_0_4.context;
        }
        return notFoundResult;
    };
    _View_PickerColumnCmp_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._PickerColumnCmp_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this._PickerColumnCmp_0_4.context.col.columnWidth;
        if (import2.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementStyle(this._el_0, 'min-width', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_0) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_0).toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = (this._PickerColumnCmp_0_4.context.col.align == 'left');
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementClass(this._el_0, 'picker-opts-left', currVal_1);
            this._expr_1 = currVal_1;
        }
        var currVal_2 = (this._PickerColumnCmp_0_4.context.col.align == 'right');
        if (import2.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementClass(this._el_0, 'picker-opts-right', currVal_2);
            this._expr_2 = currVal_2;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._PickerColumnCmp_0_4.context.ngAfterViewInit();
            }
        }
    };
    _View_PickerColumnCmp_Host0.prototype.destroyInternal = function () {
        this._PickerColumnCmp_0_4.context.ngOnDestroy();
    };
    return _View_PickerColumnCmp_Host0;
}(import3.AppView));
function viewFactory_PickerColumnCmp_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_PickerColumnCmp_Host === null)) {
        (renderType_PickerColumnCmp_Host = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, [], {}));
    }
    return new _View_PickerColumnCmp_Host0(viewUtils, parentInjector, declarationEl);
}
export var PickerColumnCmpNgFactory = new import14.ComponentFactory('.picker-col', viewFactory_PickerColumnCmp_Host0, import0.PickerColumnCmp);
var styles_PickerColumnCmp = [];
var renderType_PickerColumnCmp = null;
var _View_PickerColumnCmp0 = (function (_super) {
    __extends(_View_PickerColumnCmp0, _super);
    function _View_PickerColumnCmp0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerColumnCmp0, renderType_PickerColumnCmp, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerColumnCmp0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_colEle_0 = new import15.QueryList();
        this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._anchor_0);
        this._TemplateRef_0_5 = new import18.TemplateRef_(this._appEl_0, viewFactory_PickerColumnCmp1);
        this._NgIf_0_6 = new import16.Wrapper_NgIf(this._appEl_0.vcRef, this._TemplateRef_0_5);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'picker-opts');
        this._anchor_2 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._appEl_2 = new import5.AppElement(2, 1, this, this._anchor_2);
        this._TemplateRef_2_5 = new import18.TemplateRef_(this._appEl_2, viewFactory_PickerColumnCmp2);
        this._NgFor_2_6 = new import17.Wrapper_NgFor(this._appEl_2.vcRef, this._TemplateRef_2_5, this.parentInjector.get(import19.IterableDiffers), this.ref);
        this._anchor_3 = this.renderer.createTemplateAnchor(parentRenderNode, null);
        this._appEl_3 = new import5.AppElement(3, null, this, this._anchor_3);
        this._TemplateRef_3_5 = new import18.TemplateRef_(this._appEl_3, viewFactory_PickerColumnCmp3);
        this._NgIf_3_6 = new import16.Wrapper_NgIf(this._appEl_3.vcRef, this._TemplateRef_3_5);
        this._expr_1 = import1.UNINITIALIZED;
        this._viewQuery_colEle_0.reset([new import9.ElementRef(this._el_1)]);
        this.context.colEle = this._viewQuery_colEle_0.first;
        this.init([], [
            this._anchor_0,
            this._el_1,
            this._anchor_2,
            this._anchor_3
        ], [], []);
        return null;
    };
    _View_PickerColumnCmp0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import18.TemplateRef) && (0 === requestNodeIndex))) {
            return this._TemplateRef_0_5;
        }
        if (((token === import20.NgIf) && (0 === requestNodeIndex))) {
            return this._NgIf_0_6.context;
        }
        if (((token === import18.TemplateRef) && (2 === requestNodeIndex))) {
            return this._TemplateRef_2_5;
        }
        if (((token === import21.NgFor) && (2 === requestNodeIndex))) {
            return this._NgFor_2_6.context;
        }
        if (((token === import18.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import20.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        return notFoundResult;
    };
    _View_PickerColumnCmp0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = this.context.col.prefix;
        this._NgIf_0_6.check_ngIf(currVal_0, throwOnChange, false);
        this._NgIf_0_6.detectChangesInternal(this, this._anchor_0, throwOnChange);
        var currVal_2 = this.context.col.options;
        this._NgFor_2_6.check_ngForOf(currVal_2, throwOnChange, false);
        this._NgFor_2_6.detectChangesInternal(this, this._anchor_2, throwOnChange);
        var currVal_3 = this.context.col.suffix;
        this._NgIf_3_6.check_ngIf(currVal_3, throwOnChange, false);
        this._NgIf_3_6.detectChangesInternal(this, this._anchor_3, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_1 = this.context.col.optionsWidth;
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementStyle(this._el_1, 'width', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_1) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_1).toString()));
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_PickerColumnCmp0;
}(import3.AppView));
export function viewFactory_PickerColumnCmp0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_PickerColumnCmp === null)) {
        (renderType_PickerColumnCmp = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, styles_PickerColumnCmp, {}));
    }
    return new _View_PickerColumnCmp0(viewUtils, parentInjector, declarationEl);
}
var _View_PickerColumnCmp1 = (function (_super) {
    __extends(_View_PickerColumnCmp1, _super);
    function _View_PickerColumnCmp1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerColumnCmp1, renderType_PickerColumnCmp, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerColumnCmp1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'picker-prefix');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_PickerColumnCmp1.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.parent.context.col.prefixWidth;
        if (import2.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementStyle(this._el_0, 'width', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_0) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_0).toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = import2.interpolate(1, '', this.parent.context.col.prefix, '');
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setText(this._text_1, currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_PickerColumnCmp1;
}(import3.AppView));
function viewFactory_PickerColumnCmp1(viewUtils, parentInjector, declarationEl) {
    return new _View_PickerColumnCmp1(viewUtils, parentInjector, declarationEl);
}
var _View_PickerColumnCmp2 = (function (_super) {
    __extends(_View_PickerColumnCmp2, _super);
    function _View_PickerColumnCmp2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerColumnCmp2, renderType_PickerColumnCmp, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerColumnCmp2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'button', null);
        this.renderer.setElementAttribute(this._el_0, 'ion-button', 'picker-opt');
        this.renderer.setElementAttribute(this._el_0, 'type', 'button');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = import22.viewFactory_Button0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Button_0_4 = new import22.Wrapper_Button(null, 'picker-opt', this.parent.parentInjector.get(import8.Config), new import9.ElementRef(this._el_0), this.renderer);
        this._appEl_0.initComponent(this._Button_0_4.context, [], compView_0);
        this._text_1 = this.renderer.createText(null, '', null);
        compView_0.create(this._Button_0_4.context, [[].concat([this._text_1])], null);
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        var disposable_0 = this.renderer.listen(this._el_0, 'click', this.eventHandler(this._handle_click_0_0.bind(this)));
        this._expr_7 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [disposable_0], []);
        return null;
    };
    _View_PickerColumnCmp2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import23.Button) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 1)))) {
            return this._Button_0_4.context;
        }
        return notFoundResult;
    };
    _View_PickerColumnCmp2.prototype.detectChangesInternal = function (throwOnChange) {
        if (this._Button_0_4.detectChangesInternal(this, this._el_0, throwOnChange)) {
            this._appEl_0.componentView.markAsCheckOnce();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_0_4.context.ngAfterContentInit();
            }
        }
        var currVal_1 = this.context.$implicit._trans;
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementStyle(this._el_0, 'transform', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_1) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_1).toString()));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.$implicit._dur;
        if (import2.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementStyle(this._el_0, 'transitionDuration', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_2) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_2).toString()));
            this._expr_2 = currVal_2;
        }
        var currVal_3 = this.context.$implicit._trans;
        if (import2.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementStyle(this._el_0, 'webkitTransform', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_3) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_3).toString()));
            this._expr_3 = currVal_3;
        }
        var currVal_4 = this.context.$implicit._dur;
        if (import2.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementStyle(this._el_0, 'webkitTransitionDuration', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_4) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_4).toString()));
            this._expr_4 = currVal_4;
        }
        var currVal_5 = (this.parent.context.col.selectedIndex === this.context.index);
        if (import2.checkBinding(throwOnChange, this._expr_5, currVal_5)) {
            this.renderer.setElementClass(this._el_0, 'picker-opt-selected', currVal_5);
            this._expr_5 = currVal_5;
        }
        var currVal_6 = this.context.$implicit.disabled;
        if (import2.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setElementClass(this._el_0, 'picker-opt-disabled', currVal_6);
            this._expr_6 = currVal_6;
        }
        var currVal_7 = import2.interpolate(1, '', this.context.$implicit.text, '');
        if (import2.checkBinding(throwOnChange, this._expr_7, currVal_7)) {
            this.renderer.setText(this._text_1, currVal_7);
            this._expr_7 = currVal_7;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_PickerColumnCmp2.prototype._handle_click_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.optClick($event, this.context.index) !== false);
        return (true && pd_0);
    };
    return _View_PickerColumnCmp2;
}(import3.AppView));
function viewFactory_PickerColumnCmp2(viewUtils, parentInjector, declarationEl) {
    return new _View_PickerColumnCmp2(viewUtils, parentInjector, declarationEl);
}
var _View_PickerColumnCmp3 = (function (_super) {
    __extends(_View_PickerColumnCmp3, _super);
    function _View_PickerColumnCmp3(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerColumnCmp3, renderType_PickerColumnCmp, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerColumnCmp3.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'picker-suffix');
        this._text_1 = this.renderer.createText(this._el_0, '', null);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1
        ], [], []);
        return null;
    };
    _View_PickerColumnCmp3.prototype.detectChangesInternal = function (throwOnChange) {
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_0 = this.parent.context.col.suffixWidth;
        if (import2.checkBinding(throwOnChange, this._expr_0, currVal_0)) {
            this.renderer.setElementStyle(this._el_0, 'width', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_0) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_0).toString()));
            this._expr_0 = currVal_0;
        }
        var currVal_1 = import2.interpolate(1, '', this.parent.context.col.suffix, '');
        if (import2.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setText(this._text_1, currVal_1);
            this._expr_1 = currVal_1;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_PickerColumnCmp3;
}(import3.AppView));
function viewFactory_PickerColumnCmp3(viewUtils, parentInjector, declarationEl) {
    return new _View_PickerColumnCmp3(viewUtils, parentInjector, declarationEl);
}
var renderType_PickerCmp_Host = null;
var _View_PickerCmp_Host0 = (function (_super) {
    __extends(_View_PickerCmp_Host0, _super);
    function _View_PickerCmp_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerCmp_Host0, renderType_PickerCmp_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerCmp_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-picker-cmp', rootSelector, null);
        this.renderer.setElementAttribute(this._el_0, 'role', 'dialog');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_PickerCmp0(this.viewUtils, this.injector(0), this._appEl_0);
        this._PickerCmp_0_4 = new Wrapper_PickerCmp(this.parentInjector.get(import24.ViewController), new import9.ElementRef(this._el_0), this.parentInjector.get(import8.Config), this.parentInjector.get(import25.NavParams), this.renderer);
        this._appEl_0.initComponent(this._PickerCmp_0_4.context, [], compView_0);
        compView_0.create(this._PickerCmp_0_4.context, this.projectableNodes, null);
        var disposable_0 = this.renderer.listenGlobal('body', 'keyup', this.eventHandler(this._handle_keyup_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], []);
        return this._appEl_0;
    };
    _View_PickerCmp_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.PickerCmp) && (0 === requestNodeIndex))) {
            return this._PickerCmp_0_4.context;
        }
        return notFoundResult;
    };
    _View_PickerCmp_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._PickerCmp_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_PickerCmp_Host0.prototype._handle_keyup_0_0 = function ($event) {
        this._appEl_0.componentView.markPathToRootAsCheckOnce();
        var pd_0 = (this._PickerCmp_0_4.context._keyUp($event) !== false);
        return (true && pd_0);
    };
    return _View_PickerCmp_Host0;
}(import3.AppView));
function viewFactory_PickerCmp_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_PickerCmp_Host === null)) {
        (renderType_PickerCmp_Host = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, [], {}));
    }
    return new _View_PickerCmp_Host0(viewUtils, parentInjector, declarationEl);
}
export var PickerCmpNgFactory = new import14.ComponentFactory('ion-picker-cmp', viewFactory_PickerCmp_Host0, import0.PickerCmp);
var styles_PickerCmp = [];
var renderType_PickerCmp = null;
var _View_PickerCmp0 = (function (_super) {
    __extends(_View_PickerCmp0, _super);
    function _View_PickerCmp0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerCmp0, renderType_PickerCmp, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerCmp0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_PickerColumnCmp_0 = new import15.QueryList();
        this._text_0 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'ion-backdrop', null);
        this.renderer.setElementAttribute(this._el_1, 'disable-activated', '');
        this.renderer.setElementAttribute(this._el_1, 'role', 'presentation');
        this.renderer.setElementAttribute(this._el_1, 'tappable', '');
        this._Backdrop_1_3 = new import26.Wrapper_Backdrop(this.parentInjector.get(import27.GestureController), new import9.ElementRef(this._el_1), this.renderer);
        this._text_2 = this.renderer.createText(parentRenderNode, '\n    ', null);
        this._el_3 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'picker-wrapper');
        this._text_4 = this.renderer.createText(this._el_3, '\n      ', null);
        this._el_5 = this.renderer.createElement(this._el_3, 'div', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'picker-toolbar');
        this._text_6 = this.renderer.createText(this._el_5, '\n        ', null);
        this._anchor_7 = this.renderer.createTemplateAnchor(this._el_5, null);
        this._appEl_7 = new import5.AppElement(7, 5, this, this._anchor_7);
        this._TemplateRef_7_5 = new import18.TemplateRef_(this._appEl_7, viewFactory_PickerCmp1);
        this._NgFor_7_6 = new import17.Wrapper_NgFor(this._appEl_7.vcRef, this._TemplateRef_7_5, this.parentInjector.get(import19.IterableDiffers), this.ref);
        this._text_8 = this.renderer.createText(this._el_5, '\n      ', null);
        this._text_9 = this.renderer.createText(this._el_3, '\n      ', null);
        this._el_10 = this.renderer.createElement(this._el_3, 'div', null);
        this.renderer.setElementAttribute(this._el_10, 'class', 'picker-columns');
        this._text_11 = this.renderer.createText(this._el_10, '\n        ', null);
        this._el_12 = this.renderer.createElement(this._el_10, 'div', null);
        this.renderer.setElementAttribute(this._el_12, 'class', 'picker-above-highlight');
        this._text_13 = this.renderer.createText(this._el_10, '\n        ', null);
        this._anchor_14 = this.renderer.createTemplateAnchor(this._el_10, null);
        this._appEl_14 = new import5.AppElement(14, 10, this, this._anchor_14);
        this._TemplateRef_14_5 = new import18.TemplateRef_(this._appEl_14, viewFactory_PickerCmp2);
        this._NgFor_14_6 = new import17.Wrapper_NgFor(this._appEl_14.vcRef, this._TemplateRef_14_5, this.parentInjector.get(import19.IterableDiffers), this.ref);
        this._text_15 = this.renderer.createText(this._el_10, '\n        ', null);
        this._el_16 = this.renderer.createElement(this._el_10, 'div', null);
        this.renderer.setElementAttribute(this._el_16, 'class', 'picker-below-highlight');
        this._text_17 = this.renderer.createText(this._el_10, '\n      ', null);
        this._text_18 = this.renderer.createText(this._el_3, '\n    ', null);
        this._text_19 = this.renderer.createText(parentRenderNode, '\n  ', null);
        var disposable_0 = this.renderer.listen(this._el_1, 'click', this.eventHandler(this._handle_click_1_0.bind(this)));
        this.init([], [
            this._text_0,
            this._el_1,
            this._text_2,
            this._el_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._anchor_7,
            this._text_8,
            this._text_9,
            this._el_10,
            this._text_11,
            this._el_12,
            this._text_13,
            this._anchor_14,
            this._text_15,
            this._el_16,
            this._text_17,
            this._text_18,
            this._text_19
        ], [disposable_0], []);
        return null;
    };
    _View_PickerCmp0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import28.Backdrop) && (1 === requestNodeIndex))) {
            return this._Backdrop_1_3.context;
        }
        if (((token === import18.TemplateRef) && (7 === requestNodeIndex))) {
            return this._TemplateRef_7_5;
        }
        if (((token === import21.NgFor) && (7 === requestNodeIndex))) {
            return this._NgFor_7_6.context;
        }
        if (((token === import18.TemplateRef) && (14 === requestNodeIndex))) {
            return this._TemplateRef_14_5;
        }
        if (((token === import21.NgFor) && (14 === requestNodeIndex))) {
            return this._NgFor_14_6.context;
        }
        return notFoundResult;
    };
    _View_PickerCmp0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Backdrop_1_3.detectChangesInternal(this, this._el_1, throwOnChange);
        var currVal_1 = this.context.d.buttons;
        this._NgFor_7_6.check_ngForOf(currVal_1, throwOnChange, false);
        this._NgFor_7_6.detectChangesInternal(this, this._anchor_7, throwOnChange);
        var currVal_2 = this.context.d.columns;
        this._NgFor_14_6.check_ngForOf(currVal_2, throwOnChange, false);
        this._NgFor_14_6.detectChangesInternal(this, this._anchor_14, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if (this._viewQuery_PickerColumnCmp_0.dirty) {
                this._viewQuery_PickerColumnCmp_0.reset([this._appEl_14.mapNestedViews(_View_PickerCmp2, function (nestedView) {
                        return [nestedView._PickerColumnCmp_0_4.context];
                    })]);
                this.context._cols = this._viewQuery_PickerColumnCmp_0;
                this._viewQuery_PickerColumnCmp_0.notifyOnChanges();
            }
        }
    };
    _View_PickerCmp0.prototype.destroyInternal = function () {
        this._Backdrop_1_3.context.ngOnDestroy();
    };
    _View_PickerCmp0.prototype._handle_click_1_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.context.bdClick() !== false);
        return (true && pd_0);
    };
    return _View_PickerCmp0;
}(import3.AppView));
export function viewFactory_PickerCmp0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_PickerCmp === null)) {
        (renderType_PickerCmp = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, styles_PickerCmp, {}));
    }
    return new _View_PickerCmp0(viewUtils, parentInjector, declarationEl);
}
var _View_PickerCmp1 = (function (_super) {
    __extends(_View_PickerCmp1, _super);
    function _View_PickerCmp1(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerCmp1, renderType_PickerCmp, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerCmp1.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'picker-toolbar-button');
        this._NgClass_0_3 = new import29.Wrapper_NgClass(this.parent.parentInjector.get(import19.IterableDiffers), this.parent.parentInjector.get(import30.KeyValueDiffers), new import9.ElementRef(this._el_0), this.renderer);
        this._text_1 = this.renderer.createText(this._el_0, '\n          ', null);
        this._el_2 = this.renderer.createElement(this._el_0, 'button', null);
        this.renderer.setElementAttribute(this._el_2, 'class', 'picker-button');
        this.renderer.setElementAttribute(this._el_2, 'clear', '');
        this.renderer.setElementAttribute(this._el_2, 'ion-button', '');
        this._appEl_2 = new import5.AppElement(2, 0, this, this._el_2);
        var compView_2 = import22.viewFactory_Button0(this.viewUtils, this.injector(2), this._appEl_2);
        this._NgClass_2_4 = new import29.Wrapper_NgClass(this.parent.parentInjector.get(import19.IterableDiffers), this.parent.parentInjector.get(import30.KeyValueDiffers), new import9.ElementRef(this._el_2), this.renderer);
        this._Button_2_5 = new import22.Wrapper_Button(null, '', this.parent.parentInjector.get(import8.Config), new import9.ElementRef(this._el_2), this.renderer);
        this._appEl_2.initComponent(this._Button_2_5.context, [], compView_2);
        this._text_3 = this.renderer.createText(null, '', null);
        compView_2.create(this._Button_2_5.context, [[].concat([this._text_3])], null);
        this._text_4 = this.renderer.createText(this._el_0, '\n        ', null);
        var disposable_0 = this.renderer.listen(this._el_2, 'click', this.eventHandler(this._handle_click_2_0.bind(this)));
        this._expr_6 = import1.UNINITIALIZED;
        this.init([].concat([this._el_0]), [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4
        ], [disposable_0], []);
        return null;
    };
    _View_PickerCmp1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import31.NgClass) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._NgClass_2_4.context;
        }
        if (((token === import23.Button) && ((2 <= requestNodeIndex) && (requestNodeIndex <= 3)))) {
            return this._Button_2_5.context;
        }
        if (((token === import31.NgClass) && ((0 <= requestNodeIndex) && (requestNodeIndex <= 4)))) {
            return this._NgClass_0_3.context;
        }
        return notFoundResult;
    };
    _View_PickerCmp1.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_0 = 'picker-toolbar-button';
        this._NgClass_0_3.check_klass(currVal_0, throwOnChange, false);
        var currVal_1 = this.context.$implicit.cssRole;
        this._NgClass_0_3.check_ngClass(currVal_1, throwOnChange, false);
        this._NgClass_0_3.detectChangesInternal(this, this._el_0, throwOnChange);
        var currVal_3 = 'picker-button';
        this._NgClass_2_4.check_klass(currVal_3, throwOnChange, false);
        var currVal_4 = this.context.$implicit.cssClass;
        this._NgClass_2_4.check_ngClass(currVal_4, throwOnChange, false);
        this._NgClass_2_4.detectChangesInternal(this, this._el_2, throwOnChange);
        var currVal_5 = '';
        this._Button_2_5.check_clear(currVal_5, throwOnChange, false);
        if (this._Button_2_5.detectChangesInternal(this, this._el_2, throwOnChange)) {
            this._appEl_2.componentView.markAsCheckOnce();
        }
        this.detectContentChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Button_2_5.context.ngAfterContentInit();
            }
        }
        var currVal_6 = import2.interpolate(1, '\n            ', this.context.$implicit.text, '\n          ');
        if (import2.checkBinding(throwOnChange, this._expr_6, currVal_6)) {
            this.renderer.setText(this._text_3, currVal_6);
            this._expr_6 = currVal_6;
        }
        this.detectViewChildrenChanges(throwOnChange);
    };
    _View_PickerCmp1.prototype._handle_click_2_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context.btnClick(this.context.$implicit) !== false);
        return (true && pd_0);
    };
    return _View_PickerCmp1;
}(import3.AppView));
function viewFactory_PickerCmp1(viewUtils, parentInjector, declarationEl) {
    return new _View_PickerCmp1(viewUtils, parentInjector, declarationEl);
}
var _View_PickerCmp2 = (function (_super) {
    __extends(_View_PickerCmp2, _super);
    function _View_PickerCmp2(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_PickerCmp2, renderType_PickerCmp, import7.ViewType.EMBEDDED, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_PickerCmp2.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.renderer.createElement(null, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'class', 'picker-col');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_PickerColumnCmp0(this.viewUtils, this.injector(0), this._appEl_0);
        this._PickerColumnCmp_0_4 = new Wrapper_PickerColumnCmp(this.parent.parentInjector.get(import8.Config), new import9.ElementRef(this._el_0), this.parent.parentInjector.get(import10.DomSanitizer), this.parent.parentInjector.get(import11.Haptic));
        this._appEl_0.initComponent(this._PickerColumnCmp_0_4.context, [], compView_0);
        compView_0.create(this._PickerColumnCmp_0_4.context, [], null);
        var disposable_0 = this.renderer.listen(this._el_0, 'ionChange', this.eventHandler(this._handle_ionChange_0_0.bind(this)));
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        var subscription_0 = this._PickerColumnCmp_0_4.context.ionChange.subscribe(this.eventHandler(this._handle_ionChange_0_0.bind(this)));
        this.init([].concat([this._el_0]), [this._el_0], [disposable_0], [subscription_0]);
        return null;
    };
    _View_PickerCmp2.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.PickerColumnCmp) && (0 === requestNodeIndex))) {
            return this._PickerColumnCmp_0_4.context;
        }
        return notFoundResult;
    };
    _View_PickerCmp2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.$implicit;
        this._PickerColumnCmp_0_4.check_col(currVal_1, throwOnChange, false);
        this._PickerColumnCmp_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        var currVal_2 = this._PickerColumnCmp_0_4.context.col.columnWidth;
        if (import2.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementStyle(this._el_0, 'min-width', ((this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_2) == null) ? null : this.viewUtils.sanitizer.sanitize(import12.SecurityContext.STYLE, currVal_2).toString()));
            this._expr_2 = currVal_2;
        }
        var currVal_3 = (this._PickerColumnCmp_0_4.context.col.align == 'left');
        if (import2.checkBinding(throwOnChange, this._expr_3, currVal_3)) {
            this.renderer.setElementClass(this._el_0, 'picker-opts-left', currVal_3);
            this._expr_3 = currVal_3;
        }
        var currVal_4 = (this._PickerColumnCmp_0_4.context.col.align == 'right');
        if (import2.checkBinding(throwOnChange, this._expr_4, currVal_4)) {
            this.renderer.setElementClass(this._el_0, 'picker-opts-right', currVal_4);
            this._expr_4 = currVal_4;
        }
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._PickerColumnCmp_0_4.context.ngAfterViewInit();
            }
        }
    };
    _View_PickerCmp2.prototype.dirtyParentQueriesInternal = function () {
        this.parent._viewQuery_PickerColumnCmp_0.setDirty();
    };
    _View_PickerCmp2.prototype.destroyInternal = function () {
        this._PickerColumnCmp_0_4.context.ngOnDestroy();
    };
    _View_PickerCmp2.prototype._handle_ionChange_0_0 = function ($event) {
        this.markPathToRootAsCheckOnce();
        var pd_0 = (this.parent.context._colChange($event) !== false);
        return (true && pd_0);
    };
    return _View_PickerCmp2;
}(import3.AppView));
function viewFactory_PickerCmp2(viewUtils, parentInjector, declarationEl) {
    return new _View_PickerCmp2(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=picker-component.ngfactory.js.map
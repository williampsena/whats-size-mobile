/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/app/app-root';
import * as import1 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/component_factory_resolver';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from 'ionic-angular/config/config';
import * as import11 from 'ionic-angular/platform/platform';
import * as import12 from 'ionic-angular/components/app/app';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '../nav/overlay-portal.ngfactory';
import * as import17 from 'ionic-angular/util/keyboard';
import * as import18 from '@angular/core/src/zone/ng_zone';
import * as import19 from 'ionic-angular/gestures/gesture-controller';
import * as import20 from 'ionic-angular/transitions/transition-controller';
import * as import21 from 'ionic-angular/navigation/deep-linker';
import * as import22 from 'ionic-angular/components/nav/overlay-portal';
export var Wrapper_IonicApp = (function () {
    function Wrapper_IonicApp(p0, p1, p2, p3, p4, p5, p6) {
        this.changed = false;
        this.context = new import0.IonicApp(p0, p1, p2, p3, p4, p5, p6);
    }
    Wrapper_IonicApp.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    return Wrapper_IonicApp;
}());
var renderType_IonicApp_Host = null;
var _View_IonicApp_Host0 = (function (_super) {
    __extends(_View_IonicApp_Host0, _super);
    function _View_IonicApp_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_IonicApp_Host0, renderType_IonicApp_Host, import6.ViewType.HOST, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_IonicApp_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-app', rootSelector, null);
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_IonicApp0(this.viewUtils, this.injector(0), this._appEl_0);
        this._IonicApp_0_4 = new Wrapper_IonicApp(this.parentInjector.get(import0.AppRootToken), this.parentInjector.get(import8.ComponentFactoryResolver), new import9.ElementRef(this._el_0), this.renderer, this.parentInjector.get(import10.Config), this.parentInjector.get(import11.Platform), this.parentInjector.get(import12.App));
        this._appEl_0.initComponent(this._IonicApp_0_4.context, [], compView_0);
        compView_0.create(this._IonicApp_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_IonicApp_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.IonicApp) && (0 === requestNodeIndex))) {
            return this._IonicApp_0_4.context;
        }
        return notFoundResult;
    };
    _View_IonicApp_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._IonicApp_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_IonicApp_Host0;
}(import1.AppView));
function viewFactory_IonicApp_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_IonicApp_Host === null)) {
        (renderType_IonicApp_Host = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, [], {}));
    }
    return new _View_IonicApp_Host0(viewUtils, parentInjector, declarationEl);
}
export var IonicAppNgFactory = new import14.ComponentFactory('ion-app', viewFactory_IonicApp_Host0, import0.IonicApp);
var styles_IonicApp = [];
var renderType_IonicApp = null;
var _View_IonicApp0 = (function (_super) {
    __extends(_View_IonicApp0, _super);
    function _View_IonicApp0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_IonicApp0, renderType_IonicApp, import6.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import7.ChangeDetectorStatus.CheckAlways);
    }
    _View_IonicApp0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_viewport_0 = new import15.QueryList();
        this._viewQuery_modalPortal_1 = new import15.QueryList();
        this._viewQuery_overlayPortal_2 = new import15.QueryList();
        this._viewQuery_loadingPortal_3 = new import15.QueryList();
        this._viewQuery_toastPortal_4 = new import15.QueryList();
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'app-viewport', '');
        this._appEl_0 = new import3.AppElement(0, null, this, this._el_0);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'overlay-portal', '');
        this._appEl_1 = new import3.AppElement(1, null, this, this._el_1);
        this._OverlayPortal_1_5 = new import16.Wrapper_OverlayPortal(this.parentInjector.get(import12.App), this.parentInjector.get(import10.Config), this.parentInjector.get(import17.Keyboard), new import9.ElementRef(this._el_1), this.parentInjector.get(import18.NgZone), this.renderer, this.parentInjector.get(import8.ComponentFactoryResolver), this.parentInjector.get(import19.GestureController), this.parentInjector.get(import20.TransitionController), this.parentInjector.get(import21.DeepLinker, null), this._appEl_1.vcRef);
        this._el_2 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_2, 'overlay-portal', '');
        this._appEl_2 = new import3.AppElement(2, null, this, this._el_2);
        this._OverlayPortal_2_5 = new import16.Wrapper_OverlayPortal(this.parentInjector.get(import12.App), this.parentInjector.get(import10.Config), this.parentInjector.get(import17.Keyboard), new import9.ElementRef(this._el_2), this.parentInjector.get(import18.NgZone), this.renderer, this.parentInjector.get(import8.ComponentFactoryResolver), this.parentInjector.get(import19.GestureController), this.parentInjector.get(import20.TransitionController), this.parentInjector.get(import21.DeepLinker, null), this._appEl_2.vcRef);
        this._el_3 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_3, 'class', 'loading-portal');
        this.renderer.setElementAttribute(this._el_3, 'overlay-portal', '');
        this._appEl_3 = new import3.AppElement(3, null, this, this._el_3);
        this._OverlayPortal_3_5 = new import16.Wrapper_OverlayPortal(this.parentInjector.get(import12.App), this.parentInjector.get(import10.Config), this.parentInjector.get(import17.Keyboard), new import9.ElementRef(this._el_3), this.parentInjector.get(import18.NgZone), this.renderer, this.parentInjector.get(import8.ComponentFactoryResolver), this.parentInjector.get(import19.GestureController), this.parentInjector.get(import20.TransitionController), this.parentInjector.get(import21.DeepLinker, null), this._appEl_3.vcRef);
        this._el_4 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_4, 'class', 'toast-portal');
        this.renderer.setElementAttribute(this._el_4, 'overlay-portal', '');
        this._appEl_4 = new import3.AppElement(4, null, this, this._el_4);
        this._OverlayPortal_4_5 = new import16.Wrapper_OverlayPortal(this.parentInjector.get(import12.App), this.parentInjector.get(import10.Config), this.parentInjector.get(import17.Keyboard), new import9.ElementRef(this._el_4), this.parentInjector.get(import18.NgZone), this.renderer, this.parentInjector.get(import8.ComponentFactoryResolver), this.parentInjector.get(import19.GestureController), this.parentInjector.get(import20.TransitionController), this.parentInjector.get(import21.DeepLinker, null), this._appEl_4.vcRef);
        this._el_5 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_5, 'class', 'click-block');
        this._viewQuery_viewport_0.reset([this._appEl_0.vcRef]);
        this.context._viewport = this._viewQuery_viewport_0.first;
        this._viewQuery_modalPortal_1.reset([this._OverlayPortal_1_5.context]);
        this.context._modalPortal = this._viewQuery_modalPortal_1.first;
        this._viewQuery_overlayPortal_2.reset([this._OverlayPortal_2_5.context]);
        this.context._overlayPortal = this._viewQuery_overlayPortal_2.first;
        this._viewQuery_loadingPortal_3.reset([this._OverlayPortal_3_5.context]);
        this.context._loadingPortal = this._viewQuery_loadingPortal_3.first;
        this._viewQuery_toastPortal_4.reset([this._OverlayPortal_4_5.context]);
        this.context._toastPortal = this._viewQuery_toastPortal_4.first;
        this.init([], [
            this._el_0,
            this._el_1,
            this._el_2,
            this._el_3,
            this._el_4,
            this._el_5
        ], [], []);
        return null;
    };
    _View_IonicApp0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import22.OverlayPortal) && (1 === requestNodeIndex))) {
            return this._OverlayPortal_1_5.context;
        }
        if (((token === import22.OverlayPortal) && (2 === requestNodeIndex))) {
            return this._OverlayPortal_2_5.context;
        }
        if (((token === import22.OverlayPortal) && (3 === requestNodeIndex))) {
            return this._OverlayPortal_3_5.context;
        }
        if (((token === import22.OverlayPortal) && (4 === requestNodeIndex))) {
            return this._OverlayPortal_4_5.context;
        }
        return notFoundResult;
    };
    _View_IonicApp0.prototype.detectChangesInternal = function (throwOnChange) {
        this._OverlayPortal_1_5.detectChangesInternal(this, this._el_1, throwOnChange);
        this._OverlayPortal_2_5.detectChangesInternal(this, this._el_2, throwOnChange);
        this._OverlayPortal_3_5.detectChangesInternal(this, this._el_3, throwOnChange);
        this._OverlayPortal_4_5.detectChangesInternal(this, this._el_4, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
    };
    return _View_IonicApp0;
}(import1.AppView));
export function viewFactory_IonicApp0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_IonicApp === null)) {
        (renderType_IonicApp = viewUtils.createRenderComponentType('', 0, import13.ViewEncapsulation.None, styles_IonicApp, {}));
    }
    return new _View_IonicApp0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=app-root.ngfactory.js.map
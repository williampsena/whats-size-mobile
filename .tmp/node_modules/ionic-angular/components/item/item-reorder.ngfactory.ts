/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ionic-angular/components/item/item-reorder';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/components/item/item';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from '@angular/core/src/metadata/view';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '../icon/icon.ngfactory';
import * as import13 from 'ionic-angular/config/config';
import * as import14 from 'ionic-angular/components/icon/icon';
export class Wrapper_ItemReorder {
  context:import0.ItemReorder;
  changed:boolean;
  /*private*/ _reorder:any;
  constructor(p0:any,p1:any,p2:any,p3:any) {
    this.changed = false;
    this._reorder = import1.UNINITIALIZED;
    this.context = new import0.ItemReorder(p0,p1,p2,p3);
  }
  check_reorder(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._reorder,currValue))) {
      this.changed = true;
      this.context.reorder = currValue;
      this._reorder = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
export class Wrapper_Reorder {
  context:import0.Reorder;
  changed:boolean;
  constructor(p0:any,p1:any) {
    this.changed = false;
    this.context = new import0.Reorder(p0,p1);
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_Reorder_Host:import4.RenderComponentType = (null as any);
class _View_Reorder_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _Reorder_0_4:Wrapper_Reorder;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Reorder_Host0,renderType_Reorder_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-reorder',rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Reorder0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Reorder_0_4 = new Wrapper_Reorder(this.parentInjector.get(import8.Item),new import9.ElementRef(this._el_0));
    this._appEl_0.initComponent(this._Reorder_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._Reorder_0_4.context,this.projectableNodes,(null as any));
    var disposable_0:Function = this.renderer.listen(this._el_0,'click',this.eventHandler(this._handle_click_0_0.bind(this)));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],[disposable_0],([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Reorder) && (0 === requestNodeIndex))) { return this._Reorder_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Reorder_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  private _handle_click_0_0($event:any):boolean {
    this._appEl_0.componentView.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this._Reorder_0_4.context.onClick($event)) !== false);
    return (true && pd_0);
  }
}
function viewFactory_Reorder_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_Reorder_Host === (null as any))) { (renderType_Reorder_Host = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Reorder_Host0(viewUtils,parentInjector,declarationEl);
}
export const ReorderNgFactory:import11.ComponentFactory<import0.Reorder> = new import11.ComponentFactory<import0.Reorder>('ion-reorder',viewFactory_Reorder_Host0,import0.Reorder);
const styles_Reorder:any[] = ([] as any[]);
var renderType_Reorder:import4.RenderComponentType = (null as any);
class _View_Reorder0 extends import3.AppView<import0.Reorder> {
  _el_0:any;
  _Icon_0_3:import12.Wrapper_Icon;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Reorder0,renderType_Reorder,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'ion-icon',(null as any));
    this.renderer.setElementAttribute(this._el_0,'name','reorder');
    this.renderer.setElementAttribute(this._el_0,'role','img');
    this._Icon_0_3 = new import12.Wrapper_Icon(this.parentInjector.get(import13.Config),new import9.ElementRef(this._el_0),this.renderer);
    this._expr_1 = import1.UNINITIALIZED;
    this.init(([] as any[]),[this._el_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.Icon) && (0 === requestNodeIndex))) { return this._Icon_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = 'reorder';
    this._Icon_0_3.check_name(currVal_0,throwOnChange,false);
    this._Icon_0_3.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this._Icon_0_3.context._hidden;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'hide',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._Icon_0_3.context.ngOnDestroy();
  }
}
export function viewFactory_Reorder0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.Reorder> {
  if ((renderType_Reorder === (null as any))) { (renderType_Reorder = viewUtils.createRenderComponentType('',0,import10.ViewEncapsulation.None,styles_Reorder,{})); }
  return new _View_Reorder0(viewUtils,parentInjector,declarationEl);
}
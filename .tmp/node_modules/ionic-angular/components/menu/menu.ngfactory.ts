/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ionic-angular/components/menu/menu';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/linker/query_list';
import * as import7 from '@angular/core/src/di/injector';
import * as import8 from '@angular/core/src/linker/view_type';
import * as import9 from 'ionic-angular/components/menu/menu-controller';
import * as import10 from '@angular/core/src/linker/element_ref';
import * as import11 from 'ionic-angular/config/config';
import * as import12 from 'ionic-angular/platform/platform';
import * as import13 from 'ionic-angular/util/keyboard';
import * as import14 from '@angular/core/src/zone/ng_zone';
import * as import15 from 'ionic-angular/gestures/gesture-controller';
import * as import16 from '@angular/core/src/metadata/view';
import * as import17 from '@angular/core/src/linker/component_factory';
import * as import18 from '../backdrop/backdrop.ngfactory';
import * as import19 from 'ionic-angular/components/backdrop/backdrop';
export class Wrapper_Menu {
  context:import0.Menu;
  changed:boolean;
  /*private*/ _content:any;
  /*private*/ _id:any;
  /*private*/ _side:any;
  /*private*/ _type:any;
  /*private*/ _enabled:any;
  /*private*/ _swipeEnabled:any;
  /*private*/ _persistent:any;
  /*private*/ _maxEdgeStart:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any,p6:any,p7:any) {
    this.changed = false;
    this._content = import1.UNINITIALIZED;
    this._id = import1.UNINITIALIZED;
    this._side = import1.UNINITIALIZED;
    this._type = import1.UNINITIALIZED;
    this._enabled = import1.UNINITIALIZED;
    this._swipeEnabled = import1.UNINITIALIZED;
    this._persistent = import1.UNINITIALIZED;
    this._maxEdgeStart = import1.UNINITIALIZED;
    this.context = new import0.Menu(p0,p1,p2,p3,p4,p5,p6,p7);
  }
  check_content(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._content,currValue))) {
      this.changed = true;
      this.context.content = currValue;
      this._content = currValue;
    }
  }
  check_id(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._id,currValue))) {
      this.changed = true;
      this.context.id = currValue;
      this._id = currValue;
    }
  }
  check_side(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._side,currValue))) {
      this.changed = true;
      this.context.side = currValue;
      this._side = currValue;
    }
  }
  check_type(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._type,currValue))) {
      this.changed = true;
      this.context.type = currValue;
      this._type = currValue;
    }
  }
  check_enabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._enabled,currValue))) {
      this.changed = true;
      this.context.enabled = currValue;
      this._enabled = currValue;
    }
  }
  check_swipeEnabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._swipeEnabled,currValue))) {
      this.changed = true;
      this.context.swipeEnabled = currValue;
      this._swipeEnabled = currValue;
    }
  }
  check_persistent(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._persistent,currValue))) {
      this.changed = true;
      this.context.persistent = currValue;
      this._persistent = currValue;
    }
  }
  check_maxEdgeStart(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._maxEdgeStart,currValue))) {
      this.changed = true;
      this.context.maxEdgeStart = currValue;
      this._maxEdgeStart = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}
var renderType_Menu_Host:import4.RenderComponentType = (null as any);
class _View_Menu_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _Menu_0_4:Wrapper_Menu;
  _query_Content_0_0:import6.QueryList<any>;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement) {
    super(_View_Menu_Host0,renderType_Menu_Host,import8.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-menu',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'role','navigation');
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Menu0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Menu_0_4 = new Wrapper_Menu(this.parentInjector.get(import9.MenuController),new import10.ElementRef(this._el_0),this.parentInjector.get(import11.Config),this.parentInjector.get(import12.Platform),this.renderer,this.parentInjector.get(import13.Keyboard),this.parentInjector.get(import14.NgZone),this.parentInjector.get(import15.GestureController));
    this._query_Content_0_0 = new import6.QueryList<any>();
    this._appEl_0.initComponent(this._Menu_0_4.context,([] as any[]),compView_0);
    this._query_Content_0_0.reset(([] as any[]));
    this._Menu_0_4.context.menuContent = this._query_Content_0_0.first;
    compView_0.create(this._Menu_0_4.context,this.projectableNodes,(null as any));
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Menu) && (0 === requestNodeIndex))) { return this._Menu_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    if (this._Menu_0_4.detectChangesInternal(this,this._el_0,throwOnChange)) { this._appEl_0.componentView.markAsCheckOnce(); }
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._Menu_0_4.context.ngOnDestroy();
  }
}
function viewFactory_Menu_Host0(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_Menu_Host === (null as any))) { (renderType_Menu_Host = viewUtils.createRenderComponentType('',0,import16.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Menu_Host0(viewUtils,parentInjector,declarationEl);
}
export const MenuNgFactory:import17.ComponentFactory<import0.Menu> = new import17.ComponentFactory<import0.Menu>('ion-menu',viewFactory_Menu_Host0,import0.Menu);
const styles_Menu:any[] = ([] as any[]);
var renderType_Menu:import4.RenderComponentType = (null as any);
class _View_Menu0 extends import3.AppView<import0.Menu> {
  _viewQuery_Backdrop_0:import6.QueryList<any>;
  _el_0:any;
  _el_1:any;
  _Backdrop_1_3:import18.Wrapper_Backdrop;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement) {
    super(_View_Menu0,renderType_Menu,import8.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_Backdrop_0 = new import6.QueryList<any>();
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','menu-inner');
    this.renderer.projectNodes(this._el_0,import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._el_1 = this.renderer.createElement(parentRenderNode,'ion-backdrop',(null as any));
    this.renderer.setElementAttribute(this._el_1,'disable-activated','');
    this.renderer.setElementAttribute(this._el_1,'disableScroll','false');
    this.renderer.setElementAttribute(this._el_1,'role','presentation');
    this.renderer.setElementAttribute(this._el_1,'tappable','');
    this._Backdrop_1_3 = new import18.Wrapper_Backdrop(this.parentInjector.get(import15.GestureController),new import10.ElementRef(this._el_1),this.renderer);
    this._viewQuery_Backdrop_0.reset([this._Backdrop_1_3.context]);
    this.context.backdrop = this._viewQuery_Backdrop_0.first;
    this.init(([] as any[]),[
      this._el_0,
      this._el_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import19.Backdrop) && (1 === requestNodeIndex))) { return this._Backdrop_1_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = 'false';
    this._Backdrop_1_3.check_disableScroll(currVal_0,throwOnChange,false);
    this._Backdrop_1_3.detectChangesInternal(this,this._el_1,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._Backdrop_1_3.context.ngOnDestroy();
  }
}
export function viewFactory_Menu0(viewUtils:import2.ViewUtils,parentInjector:import7.Injector,declarationEl:import5.AppElement):import3.AppView<import0.Menu> {
  if ((renderType_Menu === (null as any))) { (renderType_Menu = viewUtils.createRenderComponentType('',1,import16.ViewEncapsulation.None,styles_Menu,{})); }
  return new _View_Menu0(viewUtils,parentInjector,declarationEl);
}
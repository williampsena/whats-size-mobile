/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ionic-angular/components/navbar/navbar';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/components/app/app';
import * as import9 from 'ionic-angular/navigation/view-controller';
import * as import10 from 'ionic-angular/navigation/nav-controller';
import * as import11 from 'ionic-angular/config/config';
import * as import12 from '@angular/core/src/linker/element_ref';
import * as import13 from '@angular/core/src/metadata/view';
import * as import14 from '@angular/core/src/linker/component_factory';
import * as import15 from '@angular/core/src/linker/query_list';
import * as import16 from '../../../@angular/common/src/directives/ng_class.ngfactory';
import * as import17 from '../button/button.ngfactory';
import * as import18 from '../icon/icon.ngfactory';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/core/src/change_detection/differs/keyvalue_differs';
import * as import21 from '@angular/common/src/directives/ng_class';
import * as import22 from 'ionic-angular/components/icon/icon';
import * as import23 from 'ionic-angular/components/button/button';
export class Wrapper_Navbar {
  context:import0.Navbar;
  changed:boolean;
  /*private*/ _color:any;
  /*private*/ _mode:any;
  /*private*/ _hideBackButton:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any) {
    this.changed = false;
    this._color = import1.UNINITIALIZED;
    this._mode = import1.UNINITIALIZED;
    this._hideBackButton = import1.UNINITIALIZED;
    this.context = new import0.Navbar(p0,p1,p2,p3,p4,p5);
  }
  check_color(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._color,currValue))) {
      this.changed = true;
      this.context.color = currValue;
      this._color = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._mode,currValue))) {
      this.changed = true;
      this.context.mode = currValue;
      this._mode = currValue;
    }
  }
  check_hideBackButton(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._hideBackButton,currValue))) {
      this.changed = true;
      this.context.hideBackButton = currValue;
      this._hideBackButton = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_Navbar_Host:import4.RenderComponentType = (null as any);
class _View_Navbar_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _Navbar_0_4:Wrapper_Navbar;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Navbar_Host0,renderType_Navbar_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-navbar',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','toolbar');
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Navbar0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Navbar_0_4 = new Wrapper_Navbar(this.parentInjector.get(import8.App),this.parentInjector.get(import9.ViewController,(null as any)),this.parentInjector.get(import10.NavController,(null as any)),this.parentInjector.get(import11.Config),new import12.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._Navbar_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._Navbar_0_4.context,this.projectableNodes,(null as any));
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Navbar) && (0 === requestNodeIndex))) { return this._Navbar_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Navbar_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._Navbar_0_4.context._hidden;
    if (import2.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementProperty(this._el_0,'hidden',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._Navbar_0_4.context._sbPadding;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'statusbar-padding',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Navbar_0_4.context.ngAfterViewInit(); } }
  }
}
function viewFactory_Navbar_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_Navbar_Host === (null as any))) { (renderType_Navbar_Host = viewUtils.createRenderComponentType('',0,import13.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Navbar_Host0(viewUtils,parentInjector,declarationEl);
}
export const NavbarNgFactory:import14.ComponentFactory<import0.Navbar> = new import14.ComponentFactory<import0.Navbar>('ion-navbar',viewFactory_Navbar_Host0,import0.Navbar);
const styles_Navbar:any[] = ([] as any[]);
var renderType_Navbar:import4.RenderComponentType = (null as any);
class _View_Navbar0 extends import3.AppView<import0.Navbar> {
  _viewQuery_bbTxt_0:import15.QueryList<any>;
  _el_0:any;
  _NgClass_0_3:import16.Wrapper_NgClass;
  _el_1:any;
  /*private*/ _appEl_1:import5.AppElement;
  _NgClass_1_4:import16.Wrapper_NgClass;
  _Button_1_5:import17.Wrapper_Button;
  _el_2:any;
  _el_3:any;
  _NgClass_3_3:import16.Wrapper_NgClass;
  _Icon_3_4:import18.Wrapper_Icon;
  _el_4:any;
  _NgClass_4_3:import16.Wrapper_NgClass;
  _el_5:any;
  _NgClass_5_3:import16.Wrapper_NgClass;
  /*private*/ _expr_3:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Navbar0,renderType_Navbar,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_bbTxt_0 = new import15.QueryList<any>();
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','toolbar-background');
    this._NgClass_0_3 = new import16.Wrapper_NgClass(this.parentInjector.get(import19.IterableDiffers),this.parentInjector.get(import20.KeyValueDiffers),new import12.ElementRef(this._el_0),this.renderer);
    this._el_1 = this.renderer.createElement(parentRenderNode,'button',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','back-button');
    this.renderer.setElementAttribute(this._el_1,'ion-button','bar-button');
    this._appEl_1 = new import5.AppElement(1,(null as any),this,this._el_1);
    var compView_1:any = import17.viewFactory_Button0(this.viewUtils,this.injector(1),this._appEl_1);
    this._NgClass_1_4 = new import16.Wrapper_NgClass(this.parentInjector.get(import19.IterableDiffers),this.parentInjector.get(import20.KeyValueDiffers),new import12.ElementRef(this._el_1),this.renderer);
    this._Button_1_5 = new import17.Wrapper_Button((null as any),'bar-button',this.parentInjector.get(import11.Config),new import12.ElementRef(this._el_1),this.renderer);
    this._appEl_1.initComponent(this._Button_1_5.context,([] as any[]),compView_1);
    this._el_2 = this.renderer.createElement((null as any),'span',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','button-inner');
    this._el_3 = this.renderer.createElement(this._el_2,'ion-icon',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','back-button-icon');
    this.renderer.setElementAttribute(this._el_3,'role','img');
    this._NgClass_3_3 = new import16.Wrapper_NgClass(this.parentInjector.get(import19.IterableDiffers),this.parentInjector.get(import20.KeyValueDiffers),new import12.ElementRef(this._el_3),this.renderer);
    this._Icon_3_4 = new import18.Wrapper_Icon(this.parentInjector.get(import11.Config),new import12.ElementRef(this._el_3),this.renderer);
    this._el_4 = this.renderer.createElement(this._el_2,'span',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','back-button-text');
    this._NgClass_4_3 = new import16.Wrapper_NgClass(this.parentInjector.get(import19.IterableDiffers),this.parentInjector.get(import20.KeyValueDiffers),new import12.ElementRef(this._el_4),this.renderer);
    compView_1.create(this._Button_1_5.context,[([] as any[]).concat([this._el_2])],(null as any));
    this.renderer.projectNodes(parentRenderNode,import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this.renderer.projectNodes(parentRenderNode,import2.flattenNestedViewRenderNodes(this.projectableNodes[1]));
    this.renderer.projectNodes(parentRenderNode,import2.flattenNestedViewRenderNodes(this.projectableNodes[2]));
    this._el_5 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_5,'class','toolbar-content');
    this._NgClass_5_3 = new import16.Wrapper_NgClass(this.parentInjector.get(import19.IterableDiffers),this.parentInjector.get(import20.KeyValueDiffers),new import12.ElementRef(this._el_5),this.renderer);
    this.renderer.projectNodes(this._el_5,import2.flattenNestedViewRenderNodes(this.projectableNodes[3]));
    this._expr_3 = import1.UNINITIALIZED;
    var disposable_0:Function = this.renderer.listen(this._el_1,'click',this.eventHandler(this._handle_click_1_0.bind(this)));
    this._expr_9 = import1.UNINITIALIZED;
    this._viewQuery_bbTxt_0.reset([new import12.ElementRef(this._el_4)]);
    this.context._bbTxt = this._viewQuery_bbTxt_0.first;
    this.init(([] as any[]),[
      this._el_0,
      this._el_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._el_5
    ]
    ,[disposable_0],([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.NgClass) && (0 === requestNodeIndex))) { return this._NgClass_0_3.context; }
    if (((token === import21.NgClass) && (3 === requestNodeIndex))) { return this._NgClass_3_3.context; }
    if (((token === import22.Icon) && (3 === requestNodeIndex))) { return this._Icon_3_4.context; }
    if (((token === import21.NgClass) && (4 === requestNodeIndex))) { return this._NgClass_4_3.context; }
    if (((token === import21.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._NgClass_1_4.context; }
    if (((token === import23.Button) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 4)))) { return this._Button_1_5.context; }
    if (((token === import21.NgClass) && (5 === requestNodeIndex))) { return this._NgClass_5_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = 'toolbar-background';
    this._NgClass_0_3.check_klass(currVal_0,throwOnChange,false);
    const currVal_1:any = ('toolbar-background-' + this.context._mode);
    this._NgClass_0_3.check_ngClass(currVal_1,throwOnChange,false);
    this._NgClass_0_3.detectChangesInternal(this,this._el_0,throwOnChange);
    const currVal_4:any = 'back-button';
    this._NgClass_1_4.check_klass(currVal_4,throwOnChange,false);
    const currVal_5:any = ('back-button-' + this.context._mode);
    this._NgClass_1_4.check_ngClass(currVal_5,throwOnChange,false);
    this._NgClass_1_4.detectChangesInternal(this,this._el_1,throwOnChange);
    if (this._Button_1_5.detectChangesInternal(this,this._el_1,throwOnChange)) { this._appEl_1.componentView.markAsCheckOnce(); }
    const currVal_6:any = 'back-button-icon';
    this._NgClass_3_3.check_klass(currVal_6,throwOnChange,false);
    const currVal_7:any = ('back-button-icon-' + this.context._mode);
    this._NgClass_3_3.check_ngClass(currVal_7,throwOnChange,false);
    this._NgClass_3_3.detectChangesInternal(this,this._el_3,throwOnChange);
    const currVal_8:any = this.context._bbIcon;
    this._Icon_3_4.check_name(currVal_8,throwOnChange,false);
    this._Icon_3_4.detectChangesInternal(this,this._el_3,throwOnChange);
    const currVal_10:any = 'back-button-text';
    this._NgClass_4_3.check_klass(currVal_10,throwOnChange,false);
    const currVal_11:any = ('back-button-text-' + this.context._mode);
    this._NgClass_4_3.check_ngClass(currVal_11,throwOnChange,false);
    this._NgClass_4_3.detectChangesInternal(this,this._el_4,throwOnChange);
    const currVal_12:any = 'toolbar-content';
    this._NgClass_5_3.check_klass(currVal_12,throwOnChange,false);
    const currVal_13:any = ('toolbar-content-' + this.context._mode);
    this._NgClass_5_3.check_ngClass(currVal_13,throwOnChange,false);
    this._NgClass_5_3.detectChangesInternal(this,this._el_5,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Button_1_5.context.ngAfterContentInit(); } }
    const currVal_3:any = this.context._hideBb;
    if (import2.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementProperty(this._el_1,'hidden',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_9:any = this._Icon_3_4.context._hidden;
    if (import2.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_3,'hide',currVal_9);
      this._expr_9 = currVal_9;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  destroyInternal():void {
    this._Icon_3_4.context.ngOnDestroy();
  }
  private _handle_click_1_0($event:any):boolean {
    this.markPathToRootAsCheckOnce();
    const pd_0:any = ((<any>this.context.backButtonClick($event)) !== false);
    return (true && pd_0);
  }
}
export function viewFactory_Navbar0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.Navbar> {
  if ((renderType_Navbar === (null as any))) { (renderType_Navbar = viewUtils.createRenderComponentType('',4,import13.ViewEncapsulation.None,styles_Navbar,{})); }
  return new _View_Navbar0(viewUtils,parentInjector,declarationEl);
}
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from 'ionic-angular/components/nav/nav';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import5 from '@angular/core/src/linker/element';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from 'ionic-angular/navigation/view-controller';
import * as import9 from 'ionic-angular/navigation/nav-controller-base';
import * as import10 from 'ionic-angular/components/app/app';
import * as import11 from 'ionic-angular/config/config';
import * as import12 from 'ionic-angular/util/keyboard';
import * as import13 from '@angular/core/src/linker/element_ref';
import * as import14 from '@angular/core/src/zone/ng_zone';
import * as import15 from '@angular/core/src/linker/component_factory_resolver';
import * as import16 from 'ionic-angular/gestures/gesture-controller';
import * as import17 from 'ionic-angular/transitions/transition-controller';
import * as import18 from 'ionic-angular/navigation/deep-linker';
import * as import19 from '@angular/core/src/metadata/view';
import * as import20 from '@angular/core/src/linker/component_factory';
import * as import21 from '@angular/core/src/linker/query_list';
export var Wrapper_Nav = (function () {
    function Wrapper_Nav(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11) {
        this.changed = false;
        this._root = import1.UNINITIALIZED;
        this._rootParams = import1.UNINITIALIZED;
        this._swipeBackEnabled = import1.UNINITIALIZED;
        this.context = new import0.Nav(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
    }
    Wrapper_Nav.prototype.check_root = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._root, currValue))) {
            this.changed = true;
            this.context.root = currValue;
            this._root = currValue;
        }
    };
    Wrapper_Nav.prototype.check_rootParams = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._rootParams, currValue))) {
            this.changed = true;
            this.context.rootParams = currValue;
            this._rootParams = currValue;
        }
    };
    Wrapper_Nav.prototype.check_swipeBackEnabled = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import2.checkBinding(throwOnChange, this._swipeBackEnabled, currValue))) {
            this.changed = true;
            this.context.swipeBackEnabled = currValue;
            this._swipeBackEnabled = currValue;
        }
    };
    Wrapper_Nav.prototype.detectChangesInternal = function (view, el, throwOnChange) {
        var changed = this.changed;
        this.changed = false;
        return changed;
    };
    return Wrapper_Nav;
}());
var renderType_Nav_Host = null;
var _View_Nav_Host0 = (function (_super) {
    __extends(_View_Nav_Host0, _super);
    function _View_Nav_Host0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Nav_Host0, renderType_Nav_Host, import7.ViewType.HOST, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_Nav_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = this.selectOrCreateHostElement('ion-nav', rootSelector, null);
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        var compView_0 = viewFactory_Nav0(this.viewUtils, this.injector(0), this._appEl_0);
        this._Nav_0_4 = new Wrapper_Nav(this.parentInjector.get(import8.ViewController, null), this.parentInjector.get(import9.NavControllerBase, null), this.parentInjector.get(import10.App), this.parentInjector.get(import11.Config), this.parentInjector.get(import12.Keyboard), new import13.ElementRef(this._el_0), this.parentInjector.get(import14.NgZone), this.renderer, this.parentInjector.get(import15.ComponentFactoryResolver), this.parentInjector.get(import16.GestureController), this.parentInjector.get(import17.TransitionController), this.parentInjector.get(import18.DeepLinker, null));
        this._appEl_0.initComponent(this._Nav_0_4.context, [], compView_0);
        compView_0.create(this._Nav_0_4.context, this.projectableNodes, null);
        this.init([].concat([this._el_0]), [this._el_0], [], []);
        return this._appEl_0;
    };
    _View_Nav_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.Nav) && (0 === requestNodeIndex))) {
            return this._Nav_0_4.context;
        }
        return notFoundResult;
    };
    _View_Nav_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._Nav_0_4.detectChangesInternal(this, this._el_0, throwOnChange);
        this.detectContentChildrenChanges(throwOnChange);
        this.detectViewChildrenChanges(throwOnChange);
        if (!throwOnChange) {
            if ((this.numberOfChecks === 0)) {
                this._Nav_0_4.context.ngAfterViewInit();
            }
        }
    };
    return _View_Nav_Host0;
}(import3.AppView));
function viewFactory_Nav_Host0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Nav_Host === null)) {
        (renderType_Nav_Host = viewUtils.createRenderComponentType('', 0, import19.ViewEncapsulation.None, [], {}));
    }
    return new _View_Nav_Host0(viewUtils, parentInjector, declarationEl);
}
export var NavNgFactory = new import20.ComponentFactory('ion-nav', viewFactory_Nav_Host0, import0.Nav);
var styles_Nav = [];
var renderType_Nav = null;
var _View_Nav0 = (function (_super) {
    __extends(_View_Nav0, _super);
    function _View_Nav0(viewUtils, parentInjector, declarationEl) {
        _super.call(this, _View_Nav0, renderType_Nav, import7.ViewType.COMPONENT, viewUtils, parentInjector, declarationEl, import1.ChangeDetectorStatus.CheckAlways);
    }
    _View_Nav0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
        this._viewQuery_viewport_0 = new import21.QueryList();
        this._el_0 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_0, 'nav-viewport', '');
        this._appEl_0 = new import5.AppElement(0, null, this, this._el_0);
        this._el_1 = this.renderer.createElement(parentRenderNode, 'div', null);
        this.renderer.setElementAttribute(this._el_1, 'class', 'nav-decor');
        this._viewQuery_viewport_0.reset([this._appEl_0.vcRef]);
        this.context._vp = this._viewQuery_viewport_0.first;
        this.init([], [
            this._el_0,
            this._el_1
        ], [], []);
        return null;
    };
    return _View_Nav0;
}(import3.AppView));
export function viewFactory_Nav0(viewUtils, parentInjector, declarationEl) {
    if ((renderType_Nav === null)) {
        (renderType_Nav = viewUtils.createRenderComponentType('', 0, import19.ViewEncapsulation.None, styles_Nav, {}));
    }
    return new _View_Nav0(viewUtils, parentInjector, declarationEl);
}
//# sourceMappingURL=nav.ngfactory.js.map
/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ionic-angular/components/range/range';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/linker/element';
import * as import6 from '@angular/core/src/di/injector';
import * as import7 from '@angular/core/src/linker/view_type';
import * as import8 from '@angular/core/src/security';
import * as import9 from '@angular/core/src/metadata/view';
import * as import10 from '@angular/core/src/linker/component_factory';
import * as import11 from '../../../@angular/common/src/directives/ng_if.ngfactory';
import * as import12 from '@angular/core/src/linker/template_ref';
import * as import13 from '@angular/common/src/directives/ng_if';
import * as import14 from 'ionic-angular/util/form';
import * as import15 from 'ionic-angular/util/haptic';
import * as import16 from 'ionic-angular/components/item/item';
import * as import17 from 'ionic-angular/config/config';
import * as import18 from '@angular/core/src/linker/element_ref';
import * as import19 from '@angular/forms/src/directives/control_value_accessor';
import * as import20 from '@angular/core/src/linker/query_list';
import * as import21 from '../../../@angular/common/src/directives/ng_for.ngfactory';
import * as import22 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import23 from '@angular/common/src/directives/ng_for';
export class Wrapper_RangeKnob {
  context:import0.RangeKnob;
  changed:boolean;
  /*private*/ _upper:any;
  constructor(p0:any) {
    this.changed = false;
    this._upper = import1.UNINITIALIZED;
    this.context = new import0.RangeKnob(p0);
  }
  check_upper(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._upper,currValue))) {
      this.changed = true;
      this.context.upper = currValue;
      this._upper = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}
export class Wrapper_Range {
  context:import0.Range;
  changed:boolean;
  /*private*/ _color:any;
  /*private*/ _mode:any;
  /*private*/ _min:any;
  /*private*/ _max:any;
  /*private*/ _step:any;
  /*private*/ _snaps:any;
  /*private*/ _pin:any;
  /*private*/ _debounce:any;
  /*private*/ _dualKnobs:any;
  /*private*/ _disabled:any;
  constructor(p0:any,p1:any,p2:any,p3:any,p4:any,p5:any) {
    this.changed = false;
    this._color = import1.UNINITIALIZED;
    this._mode = import1.UNINITIALIZED;
    this._min = import1.UNINITIALIZED;
    this._max = import1.UNINITIALIZED;
    this._step = import1.UNINITIALIZED;
    this._snaps = import1.UNINITIALIZED;
    this._pin = import1.UNINITIALIZED;
    this._debounce = import1.UNINITIALIZED;
    this._dualKnobs = import1.UNINITIALIZED;
    this._disabled = import1.UNINITIALIZED;
    this.context = new import0.Range(p0,p1,p2,p3,p4,p5);
  }
  check_color(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._color,currValue))) {
      this.changed = true;
      this.context.color = currValue;
      this._color = currValue;
    }
  }
  check_mode(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._mode,currValue))) {
      this.changed = true;
      this.context.mode = currValue;
      this._mode = currValue;
    }
  }
  check_min(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._min,currValue))) {
      this.changed = true;
      this.context.min = currValue;
      this._min = currValue;
    }
  }
  check_max(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._max,currValue))) {
      this.changed = true;
      this.context.max = currValue;
      this._max = currValue;
    }
  }
  check_step(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._step,currValue))) {
      this.changed = true;
      this.context.step = currValue;
      this._step = currValue;
    }
  }
  check_snaps(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._snaps,currValue))) {
      this.changed = true;
      this.context.snaps = currValue;
      this._snaps = currValue;
    }
  }
  check_pin(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._pin,currValue))) {
      this.changed = true;
      this.context.pin = currValue;
      this._pin = currValue;
    }
  }
  check_debounce(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._debounce,currValue))) {
      this.changed = true;
      this.context.debounce = currValue;
      this._debounce = currValue;
    }
  }
  check_dualKnobs(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._dualKnobs,currValue))) {
      this.changed = true;
      this.context.dualKnobs = currValue;
      this._dualKnobs = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._disabled,currValue))) {
      this.changed = true;
      this.context.disabled = currValue;
      this._disabled = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    return changed;
  }
}
var renderType_RangeKnob_Host:import4.RenderComponentType = (null as any);
class _View_RangeKnob_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _RangeKnob_0_4:Wrapper_RangeKnob;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_RangeKnob_Host0,renderType_RangeKnob_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('div',rootSelector,(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','range-knob-handle');
    this.renderer.setElementAttribute(this._el_0,'role','slider');
    this.renderer.setElementAttribute(this._el_0,'tabindex','0');
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_RangeKnob0(this.viewUtils,this.injector(0),this._appEl_0);
    this._RangeKnob_0_4 = new Wrapper_RangeKnob(this.parentInjector.get(import0.Range));
    this._appEl_0.initComponent(this._RangeKnob_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._RangeKnob_0_4.context,this.projectableNodes,(null as any));
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.RangeKnob) && (0 === requestNodeIndex))) { return this._RangeKnob_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._RangeKnob_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._RangeKnob_0_4.context.pressed;
    if (import2.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'range-knob-pressed',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = (this._RangeKnob_0_4.context._val === this._RangeKnob_0_4.context.range.min);
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'range-knob-min',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = (this._RangeKnob_0_4.context._val === this._RangeKnob_0_4.context.range.max);
    if (import2.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_0,'range-knob-max',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._RangeKnob_0_4.context._x;
    if (import2.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementStyle(this._el_0,'left',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_3) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_3).toString()));
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._RangeKnob_0_4.context._val;
    if (import2.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuenow',((currVal_4 == (null as any))? (null as any): currVal_4.toString()));
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._RangeKnob_0_4.context.range.min;
    if (import2.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuemin',((currVal_5 == (null as any))? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._RangeKnob_0_4.context.range.max;
    if (import2.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuemax',((currVal_6 == (null as any))? (null as any): currVal_6.toString()));
      this._expr_6 = currVal_6;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_RangeKnob_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_RangeKnob_Host === (null as any))) { (renderType_RangeKnob_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_RangeKnob_Host0(viewUtils,parentInjector,declarationEl);
}
export const RangeKnobNgFactory:import10.ComponentFactory<import0.RangeKnob> = new import10.ComponentFactory<import0.RangeKnob>('.range-knob-handle',viewFactory_RangeKnob_Host0,import0.RangeKnob);
const styles_RangeKnob:any[] = ([] as any[]);
var renderType_RangeKnob:import4.RenderComponentType = (null as any);
class _View_RangeKnob0 extends import3.AppView<import0.RangeKnob> {
  _anchor_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _TemplateRef_0_5:any;
  _NgIf_0_6:import11.Wrapper_NgIf;
  _el_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_RangeKnob0,renderType_RangeKnob,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import12.TemplateRef_(this._appEl_0,viewFactory_RangeKnob1);
    this._NgIf_0_6 = new import11.Wrapper_NgIf(this._appEl_0.vcRef,this._TemplateRef_0_5);
    this._el_1 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_1,'class','range-knob');
    this.init(([] as any[]),[
      this._anchor_0,
      this._el_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import13.NgIf) && (0 === requestNodeIndex))) { return this._NgIf_0_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context.range.pin;
    this._NgIf_0_6.check_ngIf(currVal_0,throwOnChange,false);
    this._NgIf_0_6.detectChangesInternal(this,this._anchor_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    this.detectViewChildrenChanges(throwOnChange);
  }
}
export function viewFactory_RangeKnob0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.RangeKnob> {
  if ((renderType_RangeKnob === (null as any))) { (renderType_RangeKnob = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,styles_RangeKnob,{})); }
  return new _View_RangeKnob0(viewUtils,parentInjector,declarationEl);
}
class _View_RangeKnob1 extends import3.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_0:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_RangeKnob1,renderType_RangeKnob,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','range-pin');
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this._expr_0 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[
      this._el_0,
      this._text_1
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = import2.interpolate(1,'',this.parent.context._val,'');
    if (import2.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setText(this._text_1,currVal_0);
      this._expr_0 = currVal_0;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_RangeKnob1(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_RangeKnob1(viewUtils,parentInjector,declarationEl);
}
var renderType_Range_Host:import4.RenderComponentType = (null as any);
class _View_Range_Host0 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _Range_0_4:Wrapper_Range;
  __NG_VALUE_ACCESSOR_0_5:any[];
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Range_Host0,renderType_Range_Host,import7.ViewType.HOST,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  get _NG_VALUE_ACCESSOR_0_5():any[] {
    if ((this.__NG_VALUE_ACCESSOR_0_5 == (null as any))) { (this.__NG_VALUE_ACCESSOR_0_5 = [this._Range_0_4.context]); }
    return this.__NG_VALUE_ACCESSOR_0_5;
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-range',rootSelector,(null as any));
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_Range0(this.viewUtils,this.injector(0),this._appEl_0);
    this._Range_0_4 = new Wrapper_Range(this.parentInjector.get(import14.Form),this.parentInjector.get(import15.Haptic),this.parentInjector.get(import16.Item,(null as any)),this.parentInjector.get(import17.Config),new import18.ElementRef(this._el_0),this.renderer);
    this._appEl_0.initComponent(this._Range_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._Range_0_4.context,this.projectableNodes,(null as any));
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.Range) && (0 === requestNodeIndex))) { return this._Range_0_4.context; }
    if (((token === import19.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_5; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._Range_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this._Range_0_4.context._disabled;
    if (import2.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementClass(this._el_0,'range-disabled',currVal_0);
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this._Range_0_4.context._pressed;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'range-pressed',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this._Range_0_4.context._pin;
    if (import2.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_0,'range-has-pin',currVal_2);
      this._expr_2 = currVal_2;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if ((this.numberOfChecks === 0)) { this._Range_0_4.context.ngAfterViewInit(); } }
  }
  destroyInternal():void {
    this._Range_0_4.context.ngOnDestroy();
  }
}
function viewFactory_Range_Host0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  if ((renderType_Range_Host === (null as any))) { (renderType_Range_Host = viewUtils.createRenderComponentType('',0,import9.ViewEncapsulation.None,([] as any[]),{})); }
  return new _View_Range_Host0(viewUtils,parentInjector,declarationEl);
}
export const RangeNgFactory:import10.ComponentFactory<import0.Range> = new import10.ComponentFactory<import0.Range>('ion-range',viewFactory_Range_Host0,import0.Range);
const styles_Range:any[] = ([] as any[]);
var renderType_Range:import4.RenderComponentType = (null as any);
class _View_Range0 extends import3.AppView<import0.Range> {
  _viewQuery_bar_0:import20.QueryList<any>;
  _viewQuery_slider_1:import20.QueryList<any>;
  _viewQuery_RangeKnob_2:import20.QueryList<any>;
  _el_0:any;
  _anchor_1:any;
  /*private*/ _appEl_1:import5.AppElement;
  _TemplateRef_1_5:any;
  _NgFor_1_6:import21.Wrapper_NgFor;
  _el_2:any;
  _el_3:any;
  _el_4:any;
  /*private*/ _appEl_4:import5.AppElement;
  _RangeKnob_4_4:Wrapper_RangeKnob;
  _anchor_5:any;
  /*private*/ _appEl_5:import5.AppElement;
  _TemplateRef_5_5:any;
  _NgIf_5_6:import11.Wrapper_NgIf;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Range0,renderType_Range,import7.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._viewQuery_bar_0 = new import20.QueryList<any>();
    this._viewQuery_slider_1 = new import20.QueryList<any>();
    this._viewQuery_RangeKnob_2 = new import20.QueryList<any>();
    this.renderer.projectNodes(parentRenderNode,import2.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','range-slider');
    this._anchor_1 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_1 = new import5.AppElement(1,0,this,this._anchor_1);
    this._TemplateRef_1_5 = new import12.TemplateRef_(this._appEl_1,viewFactory_Range1);
    this._NgFor_1_6 = new import21.Wrapper_NgFor(this._appEl_1.vcRef,this._TemplateRef_1_5,this.parentInjector.get(import22.IterableDiffers),this.ref);
    this._el_2 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_2,'class','range-bar');
    this._el_3 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_3,'class','range-bar range-bar-active');
    this._el_4 = this.renderer.createElement(this._el_0,'div',(null as any));
    this.renderer.setElementAttribute(this._el_4,'class','range-knob-handle');
    this.renderer.setElementAttribute(this._el_4,'role','slider');
    this.renderer.setElementAttribute(this._el_4,'tabindex','0');
    this._appEl_4 = new import5.AppElement(4,0,this,this._el_4);
    var compView_4:any = viewFactory_RangeKnob0(this.viewUtils,this.injector(4),this._appEl_4);
    this._RangeKnob_4_4 = new Wrapper_RangeKnob(this.parentInjector.get(import0.Range));
    this._appEl_4.initComponent(this._RangeKnob_4_4.context,([] as any[]),compView_4);
    compView_4.create(this._RangeKnob_4_4.context,([] as any[]),(null as any));
    this._anchor_5 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._appEl_5 = new import5.AppElement(5,0,this,this._anchor_5);
    this._TemplateRef_5_5 = new import12.TemplateRef_(this._appEl_5,viewFactory_Range2);
    this._NgIf_5_6 = new import11.Wrapper_NgIf(this._appEl_5.vcRef,this._TemplateRef_5_5);
    this.renderer.projectNodes(parentRenderNode,import2.flattenNestedViewRenderNodes(this.projectableNodes[1]));
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
    this._viewQuery_bar_0.reset([new import18.ElementRef(this._el_3)]);
    this.context._bar = this._viewQuery_bar_0.first;
    this._viewQuery_slider_1.reset([new import18.ElementRef(this._el_0)]);
    this.context._slider = this._viewQuery_slider_1.first;
    this.init(([] as any[]),[
      this._el_0,
      this._anchor_1,
      this._el_2,
      this._el_3,
      this._el_4,
      this._anchor_5
    ]
    ,([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import12.TemplateRef) && (1 === requestNodeIndex))) { return this._TemplateRef_1_5; }
    if (((token === import23.NgFor) && (1 === requestNodeIndex))) { return this._NgFor_1_6.context; }
    if (((token === import0.RangeKnob) && (4 === requestNodeIndex))) { return this._RangeKnob_4_4.context; }
    if (((token === import12.TemplateRef) && (5 === requestNodeIndex))) { return this._TemplateRef_5_5; }
    if (((token === import13.NgIf) && (5 === requestNodeIndex))) { return this._NgIf_5_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = this.context._ticks;
    this._NgFor_1_6.check_ngForOf(currVal_0,throwOnChange,false);
    this._NgFor_1_6.detectChangesInternal(this,this._anchor_1,throwOnChange);
    this._RangeKnob_4_4.detectChangesInternal(this,this._el_4,throwOnChange);
    const currVal_10:any = this.context._dual;
    this._NgIf_5_6.check_ngIf(currVal_10,throwOnChange,false);
    this._NgIf_5_6.detectChangesInternal(this,this._anchor_5,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this.context._barL;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementStyle(this._el_3,'left',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_1) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_1).toString()));
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = this.context._barR;
    if (import2.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementStyle(this._el_3,'right',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_2) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_2).toString()));
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = this._RangeKnob_4_4.context.pressed;
    if (import2.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementClass(this._el_4,'range-knob-pressed',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = (this._RangeKnob_4_4.context._val === this._RangeKnob_4_4.context.range.min);
    if (import2.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementClass(this._el_4,'range-knob-min',currVal_4);
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = (this._RangeKnob_4_4.context._val === this._RangeKnob_4_4.context.range.max);
    if (import2.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementClass(this._el_4,'range-knob-max',currVal_5);
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._RangeKnob_4_4.context._x;
    if (import2.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementStyle(this._el_4,'left',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_6) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_6).toString()));
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._RangeKnob_4_4.context._val;
    if (import2.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementAttribute(this._el_4,'aria-valuenow',((currVal_7 == (null as any))? (null as any): currVal_7.toString()));
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this._RangeKnob_4_4.context.range.min;
    if (import2.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementAttribute(this._el_4,'aria-valuemin',((currVal_8 == (null as any))? (null as any): currVal_8.toString()));
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this._RangeKnob_4_4.context.range.max;
    if (import2.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementAttribute(this._el_4,'aria-valuemax',((currVal_9 == (null as any))? (null as any): currVal_9.toString()));
      this._expr_9 = currVal_9;
    }
    this.detectViewChildrenChanges(throwOnChange);
    if (!throwOnChange) { if (this._viewQuery_RangeKnob_2.dirty) {
      this._viewQuery_RangeKnob_2.reset([
        this._RangeKnob_4_4.context,
        this._appEl_5.mapNestedViews(_View_Range2,(nestedView:_View_Range2):any => {
          return [nestedView._RangeKnob_0_4.context];
        })
      ]
      );
      this.context._knobs = this._viewQuery_RangeKnob_2;
      this._viewQuery_RangeKnob_2.notifyOnChanges();
    } }
  }
}
export function viewFactory_Range0(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<import0.Range> {
  if ((renderType_Range === (null as any))) { (renderType_Range = viewUtils.createRenderComponentType('',2,import9.ViewEncapsulation.None,styles_Range,{})); }
  return new _View_Range0(viewUtils,parentInjector,declarationEl);
}
class _View_Range1 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Range1,renderType_Range,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','range-tick');
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_0:any = this.context.$implicit.left;
    if (import2.checkBinding(throwOnChange,this._expr_0,currVal_0)) {
      this.renderer.setElementStyle(this._el_0,'left',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_0) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_0).toString()));
      this._expr_0 = currVal_0;
    }
    const currVal_1:any = this.context.$implicit.active;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'range-tick-active',currVal_1);
      this._expr_1 = currVal_1;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
}
function viewFactory_Range1(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_Range1(viewUtils,parentInjector,declarationEl);
}
class _View_Range2 extends import3.AppView<any> {
  _el_0:any;
  /*private*/ _appEl_0:import5.AppElement;
  _RangeKnob_0_4:Wrapper_RangeKnob;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  /*private*/ _expr_6:any;
  /*private*/ _expr_7:any;
  constructor(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement) {
    super(_View_Range2,renderType_Range,import7.ViewType.EMBEDDED,viewUtils,parentInjector,declarationEl,import1.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import5.AppElement {
    this._el_0 = this.renderer.createElement((null as any),'div',(null as any));
    this.renderer.setElementAttribute(this._el_0,'class','range-knob-handle');
    this.renderer.setElementAttribute(this._el_0,'role','slider');
    this.renderer.setElementAttribute(this._el_0,'tabindex','0');
    this._appEl_0 = new import5.AppElement(0,(null as any),this,this._el_0);
    var compView_0:any = viewFactory_RangeKnob0(this.viewUtils,this.injector(0),this._appEl_0);
    this._RangeKnob_0_4 = new Wrapper_RangeKnob(this.parent.parentInjector.get(import0.Range));
    this._appEl_0.initComponent(this._RangeKnob_0_4.context,([] as any[]),compView_0);
    compView_0.create(this._RangeKnob_0_4.context,([] as any[]),(null as any));
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
    this._expr_6 = import1.UNINITIALIZED;
    this._expr_7 = import1.UNINITIALIZED;
    this.init(([] as any[]).concat([this._el_0]),[this._el_0],([] as any[]),([] as any[]));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.RangeKnob) && (0 === requestNodeIndex))) { return this._RangeKnob_0_4.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0:any = true;
    this._RangeKnob_0_4.check_upper(currVal_0,throwOnChange,false);
    this._RangeKnob_0_4.detectChangesInternal(this,this._el_0,throwOnChange);
    this.detectContentChildrenChanges(throwOnChange);
    const currVal_1:any = this._RangeKnob_0_4.context.pressed;
    if (import2.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementClass(this._el_0,'range-knob-pressed',currVal_1);
      this._expr_1 = currVal_1;
    }
    const currVal_2:any = (this._RangeKnob_0_4.context._val === this._RangeKnob_0_4.context.range.min);
    if (import2.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementClass(this._el_0,'range-knob-min',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = (this._RangeKnob_0_4.context._val === this._RangeKnob_0_4.context.range.max);
    if (import2.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setElementClass(this._el_0,'range-knob-max',currVal_3);
      this._expr_3 = currVal_3;
    }
    const currVal_4:any = this._RangeKnob_0_4.context._x;
    if (import2.checkBinding(throwOnChange,this._expr_4,currVal_4)) {
      this.renderer.setElementStyle(this._el_0,'left',((this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_4) == (null as any))? (null as any): this.viewUtils.sanitizer.sanitize(import8.SecurityContext.STYLE,currVal_4).toString()));
      this._expr_4 = currVal_4;
    }
    const currVal_5:any = this._RangeKnob_0_4.context._val;
    if (import2.checkBinding(throwOnChange,this._expr_5,currVal_5)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuenow',((currVal_5 == (null as any))? (null as any): currVal_5.toString()));
      this._expr_5 = currVal_5;
    }
    const currVal_6:any = this._RangeKnob_0_4.context.range.min;
    if (import2.checkBinding(throwOnChange,this._expr_6,currVal_6)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuemin',((currVal_6 == (null as any))? (null as any): currVal_6.toString()));
      this._expr_6 = currVal_6;
    }
    const currVal_7:any = this._RangeKnob_0_4.context.range.max;
    if (import2.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementAttribute(this._el_0,'aria-valuemax',((currVal_7 == (null as any))? (null as any): currVal_7.toString()));
      this._expr_7 = currVal_7;
    }
    this.detectViewChildrenChanges(throwOnChange);
  }
  dirtyParentQueriesInternal():void {
    (<_View_Range0>this.parent)._viewQuery_RangeKnob_2.setDirty();
  }
}
function viewFactory_Range2(viewUtils:import2.ViewUtils,parentInjector:import6.Injector,declarationEl:import5.AppElement):import3.AppView<any> {
  return new _View_Range2(viewUtils,parentInjector,declarationEl);
}
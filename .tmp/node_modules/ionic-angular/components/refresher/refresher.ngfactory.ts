/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from 'ionic-angular/components/refresher/refresher';
import * as import1 from '@angular/core/src/change_detection/change_detection';
import * as import2 from '@angular/core/src/linker/view_utils';
import * as import3 from '@angular/core/src/linker/view';
export class Wrapper_Refresher {
  context:import0.Refresher;
  changed:boolean;
  /*private*/ _pullMin:any;
  /*private*/ _pullMax:any;
  /*private*/ _closeDuration:any;
  /*private*/ _snapbackDuration:any;
  /*private*/ _enabled:any;
  constructor(p0:any,p1:any,p2:any) {
    this.changed = false;
    this._pullMin = import1.UNINITIALIZED;
    this._pullMax = import1.UNINITIALIZED;
    this._closeDuration = import1.UNINITIALIZED;
    this._snapbackDuration = import1.UNINITIALIZED;
    this._enabled = import1.UNINITIALIZED;
    this.context = new import0.Refresher(p0,p1,p2);
  }
  check_pullMin(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._pullMin,currValue))) {
      this.changed = true;
      this.context.pullMin = currValue;
      this._pullMin = currValue;
    }
  }
  check_pullMax(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._pullMax,currValue))) {
      this.changed = true;
      this.context.pullMax = currValue;
      this._pullMax = currValue;
    }
  }
  check_closeDuration(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._closeDuration,currValue))) {
      this.changed = true;
      this.context.closeDuration = currValue;
      this._closeDuration = currValue;
    }
  }
  check_snapbackDuration(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._snapbackDuration,currValue))) {
      this.changed = true;
      this.context.snapbackDuration = currValue;
      this._snapbackDuration = currValue;
    }
  }
  check_enabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import2.checkBinding(throwOnChange,this._enabled,currValue))) {
      this.changed = true;
      this.context.enabled = currValue;
      this._enabled = currValue;
    }
  }
  detectChangesInternal(view:import3.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this.changed;
    this.changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
}
{"version":3,"file":"kidsSize.js","sourceRoot":"","sources":["../../src/helpers/kidsSize.ts"],"names":[],"mappings":";;;;;;AAAA,uCAAuD;AACvD,+BAA8B;AAE9B;;GAEG;AACH;IAA8B,4BAAI;IAU9B;;;OAGG;IACH,kBAAY,OAAe;QAA3B,YACI,kBAAM,OAAO,CAAC,SAIjB;QAFG,KAAI,CAAC,OAAO,GAAG,IAAI,sBAAW,CAAC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;QACrE,KAAI,CAAC,KAAK,GAAG,IAAI,sBAAW,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;;IACrE,CAAC;IACL,eAAC;AAAD,CAAC,AApBD,CAA8B,WAAI,GAoBjC;AApBD,4BAoBC;AAAA,CAAC","sourcesContent":["import { ISizeConvert, SizeConvert } from \"./dataSize\";\nimport { Size } from \"./size\";\n\n/**\n * Helper class to convert kids sizes\n */\nexport class KidsSize extends Size {\n    /**\n     * Converter to clothes sizes\n     */\n    public clothes: ISizeConvert;\n    /**\n     * Converter to shoes sizes\n     */\n    public shoes: ISizeConvert;\n\n    /**\n     * Default constructor\n     * @param country Must be the acronym of country source (eua, brl, eur)\n     */\n    constructor(country: string) {\n        super(country);\n\n        this.clothes = new SizeConvert(this.dataSizes.kids_clothes[country]);\n        this.shoes = new SizeConvert(this.dataSizes.kids_shoes[country]);\n    }\n};\n"]}